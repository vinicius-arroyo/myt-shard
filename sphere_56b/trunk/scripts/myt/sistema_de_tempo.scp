//*****************************************************************************
//*****************************************************************************
//
// SISTEMA DE TEMPO por
//
//          Galthar
//          UsMarine (vinicius.arroyo at gmail.com)
//
//*****************************************************************************
//*****************************************************************************

//TODO:
//-ajustar valores (roupas, temperaturas)
//-reativar danos devido ao clima

//TAGS usadas:
//REGION.TAG.modtemp    //modificador de temperatura por regiao
//REGION.TAG.weather
//REGION.TAG.weather_active
//REGION.TAG.type
//REGION.TAG.temperature
//SRC.TAG.no_clima  //habilita ou desabilita checagem de clima
//
//VARS usadas:
//VAR.emotetempo (liga e desliga os emotes ligados ao sistema de tempo)
//VAR.logtempo (liga e desliga os logs no console)
//VAR.tMin
//VAR.tHour
//VAR.tDay
//VAR.tMonth
//VAR.tYear
//VAR.tSeason

//*****************************************************************************
//*****************************************************************************
// DEFNAMEs
//*****************************************************************************
//*****************************************************************************

[DEFNAME tempo]
minutos_por_tick=6
segundos_por_minuto=10
minutos_por_hora=60
horas_por_dia=24
dias_por_mes=30
meses_por_ano=12

//Constantes de efeito de estações nos sectores.
SEASON_primavera    0
SEASON_inverno      3
SEASON_verao        1
SEASON_outono       2

//Constantes de clima
weather_snow=2
weather_rain=1
weather_dry=0

//Tipos de regioes
REGION_NORMAL=0
REGION_DESERT=1
REGION_UNDERGROUND=2
REGION_ICELAND=3
REGION_TROPICAL=4

//valores max e min de temperaturas suportadas
tBodyMax2=50
tBodyMax1=35
tBodyMin1=18
tBodyMin2=15

statf_noweather=03  //statf_invul|statf_dead

//corresponde ao código de luz do Sphere para cada
//hora do dia.
luz_0=30
luz_1=30
luz_2=30
luz_3=28
luz_4=24
luz_5=20
luz_6=15
luz_7=8
luz_8=6
luz_9=3
luz_10=2
luz_11=2
luz_12=1
luz_13=2
luz_14=2
luz_15=3
luz_16=6
luz_17=8
luz_18=15
luz_19=22
luz_20=25
luz_21=27
luz_22=29
luz_23=30
luz_24=30

//REGION_NORMAL
temp0_0=15
temp0_1=15
temp0_2=15
temp0_3=16
temp0_4=16
temp0_5=17
temp0_6=17
temp0_7=18
temp0_8=18
temp0_9=19
temp0_10=19
temp0_11=19
temp0_12=20
temp0_13=19
temp0_14=19
temp0_15=18
temp0_16=18
temp0_17=17
temp0_18=17
temp0_19=16
temp0_20=16
temp0_21=16
temp0_22=15
temp0_23=15

//REGION_DESERT
temp01_0=19
temp01_1=18
temp01_2=17
temp01_3=16
temp01_4=15
temp01_5=14
temp01_6=18
temp01_7=22
temp01_8=26
temp01_9=30
temp01_10=33
temp01_11=35
temp01_12=37
temp01_13=38
temp01_14=37
temp01_15=36
temp01_16=35
temp01_17=33
temp01_18=31
temp01_19=29
temp01_20=27
temp01_21=25
temp01_22=23
temp01_23=21

temp_verao=7	//MODTEMP verão
temp_outono=-2	//MODTEMP outorno
temp_inverno=-09 //MODTEMP inverno
temp_primavera=0	//MODTEMP primavera

dungeon_light=30

snow_temp_max=7


//*****************************************************************************
//*****************************************************************************
// EVENTs
//*****************************************************************************
//*****************************************************************************
[EVENTS e_clima]
ON=@ENVIRONCHANGE
//sysmessageyellow [e_clima] ENVIRONCHANGE
if !<src.npc>
    src.f_correctLight <src.region.flags>
endif

[REGIONTYPE r_clima]

ON=@ENTER
//corrige luz ao entrar em cada regiao
if !<src.npc>
    src.f_correctLight <flags>
endif

ON=@CliPeriodic
	src.f_correctLight <src.region.flags>

ON=@REGPERIODIC

//calcula e salva temperatura para facilitar calculo dos efeitos
if <flags>&region_flag_underground
    TAG.temperature=<TAG0.modtemp>
else
    TAG.temperature=<eval <DEF.temp<TAG0.type>_<eval <VAR.tHour>>>+<DEF.temp_<VAR.tSeason>>+<TAG0.modtemp>>
endif

//NPCs nao disparam esse evento, mas por garantia.....
if <src.npc>
    return 0
//areas muito grandes nao tem clima
elif (<defname>==a_world) || (<defname>==a_dungeons)
    return 0
//bloqueia efeitos em underground
elif (<flags>&region_flag_underground)
    return 0
//se clima jah ativo, verifica se esta na hora de desabilitar    
elif <tag0.weather_active>
    if <serv.time> > <tag0.weather_active>
		if <var.logtempo> 
			serv.log [CLIMA] <name> - SECO
		endif
        dry
        tag.weather=<def.weather_dry>
        tag.weather_active=0
    endif
    return 0
//se clima jah ativo, verifica se esta na hora de habilitar o proximo efeito
elif <tag0.weather_next>
    if <serv.time> > <tag0.weather_next>
        tag.weather_next=0
    else
        return 0
    endif
endif

LOCAL.temp=<TAG0.temperature>
//serv.log [CLIMA] <name> - <dLOCAL.temp>/<TAG0.temperature>

//set duration: 1 minute to 1 hour
LOCAL.ton=<R600,36000>
tag.weather_active=<eval <serv.time>+<LOCAL.ton>>
LOCAL.toff=0

//20% chance of raining / snowing
if !<R5> && (<TAG0.type>!=<DEF.REGION_DESERT>) && !(<FLAGS>&region_flag_underground)
    if (<LOCAL.temp> <= snow_temp_max)
        snow
        tag.weather=<def.weather_snow>
    else
       rain
        tag.weather=<def.weather_rain>
    endif
    
    //o proximo efeito soh podera aparecer de 1min a 1h apos acabar esse
    LOCAL.toff=<R600,36000>
    tag.weather_next=<eval <tag.weather_active>+<LOCAL.toff>>
endif

season <DEF.SEASON_<var.tSeason>>

if <var.logtempo> 
serv.log [CLIMA] <name> - <tag0.weather> - <eval <LOCAL.ton>/600>m/<eval <LOCAL.toff>/600>m
endif


//*****************************************************************************
//*****************************************************************************
// TYPEDEFs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// t_clock
//*****************************************************************************
[TYPEDEF t_clock]
ON=@DCLICK
src.time_now
return 1

//*****************************************************************************
//*****************************************************************************
// ITEMDEFs
//*****************************************************************************
//*****************************************************************************

[ITEMDEF i_pedra_tempo]
ID=01810
NAME=Pedra dos Tempos
CATEGORY=MyT - Provisions - GM Items
SUBSECTION=Tempo
DESCRIPTION=Pedra dos Tempos
TYPE=t_script

on=@click
say <instances>

ON=@CLIENTTOOLTIP
f_sendTooltip <name>,Instancias: <instances>
return 1

ON=@create
attr=attr_static|attr_move_never

on=@dclick
dialog d_tempo
return 1

//*****************************************************************************
// i_tile_clima
//*****************************************************************************
[ITEMDEF i_tile_clima]
ID=0495
type=t_script
name=Controle de clima
CATEGORY=MyT - Provisions - GM Items
SUBSECTION=Tempo
DESCRIPTION=Tile de controle de clima

ON=@CREATE
ATTR=08090
TIMER=-1
COLOR=026

ON=@STEP
if (!<argn1>)   //Só quando pisa a 1ª vez
    src.tag.no_clima=<tag0.no_clima>
    if (<tag0.light>)
        src.tag.PersonalLight=<tag.light>
    else
        src.tag.PersonalLight=
    endif
    src.f_correctLight <src.region.flags>
endif

ON=@DCLICK
if (!<src.IsGM>)
    sysmessagered So GMs.
    return 1
endif
src.ctag.clima.uid=<uid>
src.ctag.clima.no_clima=<tag0.no_clima>
src.ctag.clima.light=<tag0.light>
src.dialog d_cont_clima
return 1

ON=@CLIENTTOOLTIP
f_sendTooltip <name>, <QVAL <tag0.no_clima>?Sem efeitos de clima:Ligar efeitos de clima><DEF.br>Luz: <QVAL <tag0.light>?<dtag.light>:Ambiente>
return 1

//*****************************************************************************
// i_termometro
//*****************************************************************************
[TYPEDEF t_termometro]

[ITEMDEF i_termometro]
ID=0104b
NAME=Termometro
WEIGHT=0
TYPE=t_termometro
CATEGORY=MyT - Provisions - GM Items
SUBSECTION=Tempo
DESCRIPTION=Termometro


ON=@CREATE
color=0321

ON=@DClick
src.temp_now
return 1

//*****************************************************************************
// i_neve
//*****************************************************************************
[ITEMDEF i_neve]
ID=020E8
NAME=neve
TYPE=t_script
CATEGORY=MyT - Provisions - GM Items
SUBSECTION=Tempo
DESCRIPTION=Neve

ON=@CREATE
//TAG.NOSAVE=1
COLOR=0481
ATTR=attr_move_never|attr_decay
TIMER={6 15}

ON=@DCLICK
TARGET Voce pegou um pouco de neve e fez uma bola. Deseja atacar em quem?
return 1

ON=@targon_char
SRC.TARG.EFFECT 0,0E73,6,30,0
SRC.TARG.sysmessageyellow Jogaram uma bola de neve em voce!
remove
return 1

ON=@step
remove
return 1

//*****************************************************************************
// i_mry_clima
//*****************************************************************************
[ITEMDEF i_mry_clima]
ID=020E8
NAME=clima
TYPE=t_eq_script
CATEGORY=MyT - Provisions - GM Items
SUBSECTION=Tempo
DESCRIPTION=Clima
LAYER=layer_special

ON=@CREATE
timer=1

ON=@TIMER
timer=<R5,15>

//Bloqueia casos que não há clima
//statf_dead|statf_stone|statf_hallucinating|statf_hidden|statf_indoors|statf_ridden
if (<cont.isgm>) || (<cont.flags>&041440002) || (<cont.tag0.no_clima>) || (<cont.npc>)
    return 1
endif

LOCAL.f=<cont.temp_check>
cont.temp_effect <LOCAL.f>

return 1

//*****************************************************************************
//*****************************************************************************
// FUNCTIONs
//*****************************************************************************
//*****************************************************************************
[FUNCTION f_onserver_timer]
//serv.b tick

VAR.tMin=<eval <VAR.tMin>+<DEF.minutos_por_tick>>
if (<VAR.tMin> >= minutos_por_hora) //minuto
 VAR.tMin=0
 VAR.tHour=<VAR.tHour>+1
 serv.area.a_world.light=<DEF.luz_<eval <var.tHour>>>

 f_connectDB
 event_serverTick

 if (<VAR.tHour> >= horas_por_dia)  //hora
  VAR.tHour=0
  VAR.tDay=<VAR.tDay>+1
  doswitch <eval <VAR.tMonth> - 1>
   var.tSeason=inverno
   var.tSeason=inverno
   var.tSeason=primavera
   var.tSeason=primavera
   var.tSeason=primavera
   var.tSeason=verao
   var.tSeason=verao
   var.tSeason=verao
   var.tSeason=outono
   var.tSeason=outono
   var.tSeason=outono
   var.tSeason=inverno
  enddo

  if (<VAR.tDay> > dias_por_mes)   //dia
   VAR.tDay=1
   VAR.tMonth=<VAR.tMonth>+1
   
   //Limpar contas de guest inuteis a cada 5 dias
   form_PruneAccounts
   
   if (<VAR.tMonth> > meses_por_ano)  //meses 
    VAR.tMonth=1
    VAR.tYear=<VAR.tYear>+1
    
    //faz limpeza do sistema de vendas a cada mes in-game
    vendor_cleanup
   endif
  endif
 endif
endif
return 1

//*****************************************************************************
// fix_world
//*****************************************************************************
[FUNCTION fix_world]
//mantem todo o world escuro e sem chuva/neve (hardcoded)
if <var.logtempo> 
serv.log [FIX LIGHT-WEATHER]
endif
serv.area.a_world.light 30
serv.area.a_world.rainchance 0
serv.area.a_world.coldchance 0

//*****************************************************************************
// fix_weather
//*****************************************************************************
[FUNCTION fix_weather]
//mantem todo o world escuro e sem chuva/neve (hardcoded)
if <var.logtempo>  
	serv.log [FIX REGION WEATHER]
endif
region.tag.weather=0
region.tag.weather_active=0
region.tag.weather_next=0

//*****************************************************************************
// time_now
//*****************************************************************************
//mostra a data e hora atual
[FUNCTION time_now]
 sysmessageyellow Data: <eval <var.tHour>>:<eval <var.tMin>> - <eval <var.tDay>>/<eval <var.tMonth>>/<eval <var.tYear>>
return 1

//*****************************************************************************
// temp_now
//*****************************************************************************
//mostra a temperatura atual
[FUNCTION temp_now]
LOCAL.temp=<temp_get>
IF (<LOCAL.temp> < 0)
 LOCAL.color=0480
ELIF (<LOCAL.temp> < 9 )
 LOCAL.color=0122
ELIF (<LOCAL.temp> < 20 )
 LOCAL.color=09C
ELIF (<LOCAL.temp> < 26 )
 LOCAL.color=0146
ELSE
 LOCAL.color=026
ENDIF
sysmessage=@<LOCAL.color> Temperatura: <dLOCAL.temp>oC
sysmessage=@<LOCAL.color> Estacao: <VAR.tSeason>
doswitch <region.tag0.weather>
    sysmessage=@<LOCAL.color> Tempo: Seco
    sysmessage=@<LOCAL.color> Tempo: Chuvoso
    sysmessage=@<LOCAL.color> Tempo: Nevando
enddo
return 1

//*****************************************************************************
// temp_get
//*****************************************************************************
//pega a temperatura da regiao atual
[FUNCTION temp_get]
return <REGION.TAG0.temperature>

//*****************************************************************************
// temp_check()
//*****************************************************************************
//'calcula' quantidade de roupa e temperatura de onde UID está.
//compara com valores pre-estabelecidos para saber se UID está com muito frio,
//frio, normal ou calor
//retorna:  0 sem penalidades
//          1 calor
//          2 frio
//          3 muito frio
[FUNCTION temp_check]

if (<tag0.no_clima>) || (<flags>&statf_indoors) || (<tag0.resitenteaoclima>)
    return 0
endif

LOCAL.temp=<temp_get>

//'calcula' quantidade de roupa
if (<tag0.comcapuz>)
    LOCAL.cloth=30 //capuz da peso 3
else
    LOCAL.cloth=0
endif

FOR l 1 24
    OBJ=<findlayer.<LOCAL.l>>
    if (<OBJ.type>==t_clothing)
        LOCAL.cloth += <OBJ.weight>
    elif (<OBJ.type>==t_armor_leather)        
        LOCAL.cloth +=<eval <OBJ.weight>/2>
    endif
ENDFOR

//assumindo nivel de roupa de 0 a 300, permite 300/15 graus de protecao
LOCAL.cloth=<eval <LOCAL.cloth>/15>

//adiciona protecao devido a calor proximo
if (<isneartype t_fire 1>) || (<isneartype t_forge 1>)
    LOCAL.cloth=<LOCAL.cloth>+3
endif

//decide efeito
if ( <LOCAL.temp> < <eval <DEF.tBodyMin2>-<LOCAL.cloth>> )
    LOCAL.f=3
elif ( <LOCAL.temp> < <eval <DEF.tBodyMin1>-<LOCAL.cloth>> )
    LOCAL.f=2
elif ( <LOCAL.temp> > <eval <DEF.tBodyMax1>-<LOCAL.cloth>> )
    LOCAL.f=1
else 
    LOCAL.f=0
endif

if (0<argn1> > 0 )
    say temp: <eval <LOCAL.temp>> cloth: <eval <LOCAL.cloth>> e:<LOCAL.f>
endif

return <LOCAL.f>

//sysmessage [CLIMA] T:<eval <LOCAL.temp>> R:<eval <LOCAL.cloth>> <eval <DEF.tBodyMin2>-<LOCAL.cloth>> <eval <DEF.tBodyMin1>-<LOCAL.cloth>> <eval <DEF.tBodyMax1>-<LOCAL.cloth>>

//*****************************************************************************
// temp_effect( effect )
//*****************************************************************************
//cria efeito devido a temperatura:
//1 = calor
//2 = frio
//3 = muito frio
[FUNCTION temp_effect] 

if (<isgm>) || (<flags>&statf_noweather) || (<tag0.no_clima>) || (<tag0.resitenteaoclima>) ||  (<flags>&statf_polymorph)
 //sysmessage [clima] sem clima
 return
endif

//adiciona neve ou poça
IF !(<region.flags>&region_flag_underground)
    doswitch <region.tag0.weather>
        local.c=
        temp_addSplash
        temp_addSnow
    enddo
endif

//nao da calor se chovendo
if (0<argn>==1) && (<region.tag0.weather>!=1)
 if (<stam> >= 5)
  stam=<stam>-{0 2}
 endif
 DORAND 20
  sysmessagegreen Voce esta se sentindo cansado devido ao calor.
	if <var.emotetempo>
		emotered suando
	endif
 ENDDO
elif (0<argn>==2)
 if <stam> > 15
  stam -= <R15>
 elif <hits> > 15
  DAMAGE <R1> dam_cold <UID>
 endif
 DORAND 5
  sysmessagegreen Voce esta sentindo frio. Abrigue-se.
  if <var.emotetempo>
	emotered treme
  endif
 ENDDO
elif (0<argn>==3)
 if (<stam> > 15)
  stam -= <R8,15>
 endif
 if <hits> > 4
  DAMAGE <R1,4> dam_cold <UID>
 endif
 DORAND 5
  sysmessagered Seus membros estao congelando de frio! Voce vai morrer!
  sysmessagegreen Voce esta sentindo MUITO frio. Abrigue-se.
  if <var.emotetempo> 
	emotered treme muito
  endif
 ENDDO
endif
if (<stam> < 0) || (<stam> > 900)
 stam=0
endif


//*****************************************************************************
// temp_addSnow
//*****************************************************************************
//cria poca de neve
[FUNCTION temp_addSnow]
serv.newitem i_neve
new.movenear <uid> 6

//*****************************************************************************
// temp_addSplash
//*****************************************************************************
//cria poca de agua
[FUNCTION temp_addSplash]
serv.newitem i_pool_chuva
new.movenear <uid> 6

//*****************************************************************************
// f_correctLight( <flags> )
//*****************************************************************************
//Corrige a luz do client de acordo com o ambeinte
[FUNCTION f_correctLight]

//tag.light_lvl = nivel de escuridao
if (<flags>&statf_nightsight)
    tag.light_lvl=0
    //sysmessageyellow [LUZ] 30 (Nightsight)

//Luz predefinida para esse jogador
elif (<tag0.PersonalLight>)
    tag.light_lvl=<tag0.PersonalLight>
    //sysmessageyellow [LUZ] <eval 30-<DEF.dungeon_light>> (Luz Pessoal)

//Debaixo da terra. Escurecer
elif (<ARGN>&region_flag_underground) || (<REGION.FLAGS>&region_flag_underground)
    tag.light_lvl=<DEF.dungeon_light>
    //sysmessageyellow [LUZ] <eval 30-<DEF.dungeon_light>> (Dungeon)

else
    LOCAL.luz=<DEF.luz_<eval <var.tHour>>>
    //sysmessageyellow [LUZ]  <eval 30-<LOCAL.luz>> (ambiente)
    tag.light_lvl=<LOCAL.luz>
endif

//drows tem visao invertida
if strmatch(<tag.raca>,Drow))
    f_personalLight <tag.light_lvl>
else
    f_personalLight <eval 30-<tag.light_lvl>>
endif

return 1

[FUNCTION tempo]
//Acessa as funções de tempo para os GMs
LOCAL.temp=<temp_get>
IF (<LOCAL.temp> < 0)
 LOCAL.color=0480
ELIF (<LOCAL.temp> < 9 )
 LOCAL.color=0122
ELIF (<LOCAL.temp> < 20 )
 LOCAL.color=09C
ELIF (<LOCAL.temp> < 26 )
 LOCAL.color=0146
ELSE
 LOCAL.color=026
ENDIF
sysmessage=@<local.color> t=<dLOCAL.temp>oC
DIALOG d_tempo
//*****************************************************************************
//*****************************************************************************
// GUMPs
//*****************************************************************************
//*****************************************************************************

[DIALOG d_tempo]
250, 125    
resizepic 0 0 3600 250 210

resizepic 20 20 3000 50 22
textentry 20 20 50 25 0 1 0
text 75 20 026 1

resizepic 20 50 3000 50 22
textentry 20 50 50 25 0 2 2
text 75 50 026 3

resizepic 20 80 3000 50 22
textentry 20 80 50 25 0 3 4
text 75 80 026 5

resizepic 20 110 3000 50 22
textentry 20 110 50 25 0 4 6
text 75 110 026 7

resizepic 20 140 3000 50 22
textentry 20 140 50 25 0 5 8
text 75 140 026 9

button 100 168 248 247 1 0 1

[DIALOG d_tempo TEXT]
<EVAL <VAR.tMin>>
Minutos
<EVAL <VAR.tHour>>
Horas
<EVAL <VAR.tDay>>
Dia
<EVAL <VAR.tMonth>>
Mes
<EVAL <VAR.tYear>>
Ano

[DIALOG d_tempo BUTTON]

ON=0
  SRC.SYSMESSAGE O tempo nao foi modificado.

ON=1
LOCAL.retry=0
IF (<ARGTXT[1]>>=0) && (<ARGTXT[1]><<DEF.minutos_por_hora>)
  VAR.tMin=<ARGTXT[1]>
  
    
ELSE
  LOCAL.retry=1
  SRC.SYSMESSAGE Minutos devem ser entre 0 e <eval <DEF.minutos_por_hora>-1>.
ENDIF

IF (<ARGTXT[2]>>=0) && (<ARGTXT[2]><<DEF.horas_por_dia>)
  VAR.tHour=<ARGTXT[2]>
ELSE
  LOCAL.retry=1
  SRC.SYSMESSAGE Horas devem ser entre 0 e <eval <DEF.horas_por_dia>-1>.
ENDIF

IF (<ARGTXT[3]>>0) && (<ARGTXT[3]><=<DEF.dias_por_mes>)
  VAR.tDay=<ARGTXT[3]>
ELSE
  LOCAL.retry=1
  SRC.SYSMESSAGE Dias devem ser entre 1 e <eval <DEF.dias_por_mes>>.
ENDIF

IF (<ARGTXT[4]>>0) && (<ARGTXT[4]><=<DEF.meses_por_ano>)
  VAR.tMonth=<ARGTXT[4]>
ELSE
  LOCAL.retry=1
  SRC.SYSMESSAGE Meses devem ser entre 1 e <eval <DEF.meses_por_ano>>.
ENDIF

IF (<ARGTXT[5]>>=0)
  VAR.tYear=<ARGTXT[5]>
ELSE
  LOCAL.retry=1
  SRC.SYSMESSAGE Anos nao podem ser negativos
ENDIF

if ( <LOCAL.retry>==1 )
  dialog d_tempo
endif  



[DIALOG d_cont_clima]
250,150
page 0
resizepic 0 0 9200 283 238
dtext 81 9 37 Controle de clima
button 40 50 2151 2152 1 0 1

IF (<src.ctag0.clima.no_clima>)
 dtext 80 55 0 Desliga clima (indoor)
else
 dtext 80 55 0 Liga clima (outdoor)
endif

button 40 100 2151 2152 1 0 2

IF (<src.ctag0.clima.light>)
 dtext 80 105 0 Luz pessoal
 gumppic 136 143 2444
 dtext 27 144 0 Acertar luz para
 dtext 41 171 0 30 = escuro; 1 = claro; 0 = ambiente.
 dtextentry 155 144 47 20 0 5 <eval <src.ctag0.clima.light>>
else
 dtext 80 105 0 Luz ambiente
endif

button 23 203 247 248 1 0 3
button 204 202 241 242 1 0 0

[DIALOG d_cont_clima text]
Controle de clima
Desliga clima (indoor)
Luz ambiente
Acertar luz para
30 = escuro; 1 = claro; 0 = ambiente.
30

[DIALOG d_cont_clima button]
ON=1
// Entra/sai
IF (<src.ctag0.clima.no_clima>)
 src.ctag.clima.no_clima=
else
 src.ctag.clima.no_clima=1
endif
src.DIALOG d_cont_clima

ON=2
// Luz
IF (<src.ctag0.clima.light>)
 src.ctag0.clima.light=
else
 src.ctag0.clima.light=1
endif
src.DIALOG d_cont_clima

ON=3
// OK
IF (<src.ctag0.clima.light>)
 IF (<ISNUM <argtxt[5]>>)
  src.ctag0.clima.light=<argtxt[5]>
 ELSE
  src.ctag0.clima.light=
  src.sysmessagered AVISO: Luz incorreta. Trocado para Luz Ambiente.
 endif
ENDIF
obj=<src.ctag0.clima.UID>
obj.tag.light=<src.ctag0.clima.light>
obj.tag.no_clima=<src.ctag0.clima.no_clima>
if (<obj.tag0.no_clima>
 obj.color=05c
else
 obj.color=026
endif
obj.update
src.sysmessagegreen Controle de clima alterado com sucesso!

ON=0
// Cancel
src.sysmessagered Nada foi alterado.

[PLEVEL 0]
ceu

[FUNCTION CEU]
if (<src.flags>&statf_indoors) || (<region.flags>&region_flag_underground)
 src.sysmessageyellow Como pretende observar os ceus em um lugar coberto?
 return 1
endif
src.emoteyellow Observando o céu

if (<region.tag0.weather> = 1)
	src.sysmessageyellow Nuvens escondem o céu
	src.anim 5
	return 1
else
	DOSWITCH <eval <var.tHour>/3>
		src.sysmessageorange As Luas comecam a se afastar.
		src.sysmessageorange A lua de Mond esta se pondo ao sul e a Luna ao norte.
		src.sysmessageorange O sol vem surgindo da direcao leste.
		src.sysmessageorange O sol esta quase chegando a pino.
		src.sysmessageorange O sol esta a pino.
		src.sysmessageorange O sol esta indo em direcao oeste.
		src.sysmessageorange A Lua de Mond vem despontando sozinha ao norte e a de Luna ao sul.
		src.sysmessageorange A Lua de Luna quase toca a Lua de Mond.
	ENDDO
endif

[EOF]
