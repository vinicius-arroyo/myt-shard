//*****************************************************************************
//*****************************************************************************
//
// SISTEMA DE COMBATE por
//  Kell
//  Galthar
//  Silver
//  UsMarine (vinicius.arroyo at gmail.com)
//
//*****************************************************************************
//*****************************************************************************
//TODO:

//@HIT
//
//Verifica se acerta hit {[skill_atacante/(2*skill_defensor)]+[agr_atack+agr_def+10]%)}*100 [%]
//  Fim
//Verifica se usa special move e consome mana se usar
//Calcula dano base random(min,max)
//Verifica se cosnegue bloquear com escudo (parrying/3) ou arma (parrying/6)
//  Danifica Escudo
//  Fim
//Executa efeitos de spells agregados
//Soma dano special move ao base
//Ajusta dano
//  STR 
//    + (STR/3) %       - 0 a 33%
//  ANATOMY
//    + (ANATOMY / 2)%  - 0 a 50%
//  TACTICS
//    + (TACTICS / 2)%  - 0 a 50%
//  ATACANTE ENVENENADO
//   !!!! - (more2 / 15)
//  STAMINA
//    - (50 - (STAM/DEX)*50)        - 0 a 50%
//  PESO
//    - (WEIGHT / MAXWEIGHT) * 50   - 0 a 50%
//  QUALIDADE DA ARMA DE ATAQUE
//    - (50 - (HITS/MAXHITS)*50)    - 0 a 50%

//Tenta envenenar - (atacante é animal venenoso && poisoning > 30% && nao envenenado)
//  Envenena com 10% poisoning e duração de 20 a 30 ataques.
//Tenta envenenar - (armas envenenadas && ( 50% swords || 50% fencing || 76% poison ) )
//  Envenena com spell poison, 30% de skill.
//Tenta queimar - (armas com fogo)
//  Queima (fire collumn) - 3 a 6 de dano
//Define local do ataque ( rand 0 a 10% tactics )
//  torax
//  torax
//  mao
//  braco
//  perna
//  perna
//  torax
//  torax
//  pescoco
//  cabeca
//  cabeca
//
//Danifica armadura protegendo local do ataque - dano_base / 6
//Danifica armas utilizadas - 0 a 1
//Emite sons
//Cansa atacante: - 0 a 2 de stamina
//Desconcentra vitima: - 0 a 2 de mana

//  ARMADURA ALVO
//    - (dano * AR%)

//Aplica dano

// POISON por magia: i_veneno.MORE2 = 50% magery repeticoes e 7% magery dano
// HEAL POISON por magia: i_veneno.MORE2 -= 33% magery
// POISON por pocao: pocao.MORE2 = (890,1000,1500,2000) (fraca,normal,concentrada,forte)
//   flecha envenenada: dano constante: i_poison_arrow
//   arma envenenada: 4,5% more2 e 1,5% na recarga (recargas de dano constante:2)
//   alvo envenenado: 5% more2 repeticoes e 0.71% more2 dano
//   chao envenenado: 2,5% more2 repeticoes e 0.36% more2 dano
// POISON NPC: i_veneno.MORE2 = ( 10% poisoning ) repeticoes e 1 a ( 10% poisoning * 14%) 

//TAGS usadas:
//tag.agr       nível de agressividade do combate (0 a 10)
//tag.moddam    modificado fixo de dano

//item.tag.name nome original do item antes de ser envenenado
//*****************************************************************************

[PLEVEL 0]
combate

[DEFNAME combate_cfg]
WPE_17    1 //bless
WPE_20    1 //poison
WPE_30    1 //lightning
WPE_38    1 //paralyse
WPE_51    1 //flamestrike
WPE_350   1 //chill

SPE_11    1 //cure
SPE_18    1 //fireball
SPE_20    1 //poison
//*****************************************************************************
//*****************************************************************************
// EVENTs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// e_silver_weapon
//*****************************************************************************
[EVENTS e_silver_weapon]

//SRC:      esta apanhando
//DEFAULT:  arma
ON=@CDAMAGE
if (<src.npc>==brain_undead) || (<src.npc>==BRAIN_DRAGON)
    src.damage <eval <R<dam>>/2>,<def.dam_magic>,<uid>
    src.EFFECT 3,i_fx_curse,6,15,1
    SOUND snd_spell_harm
endif

[TYPEDEF e_fragile]
ON=@STEP
src.emotered quebrou
sfx 040
remove
return 1

[EVENTS T_WEAPON_FIRE]
ON=@CDAMAGE
if !(<attr>&01) //se não tá identificado
    return 0
endif

if (<tag0.flame_timer> < <serv.time>)
    src.damage <R4,10>,dam_fire,<topobj>
    src.EFFECT 2 i_fire_column 6 30 0
    sfx 05CF
    IF !<R19>
        src.f_pega_fogo <R5,7>
    endif        
    tag.flame_timer=<eval <serv.time>+<R15.0,65.0>>
endif

[EVENTS T_WEAPON_COLD]
ON=@CDAMAGE
if !(<attr>&01) //se não tá identificado
    return 0
endif

if (<tag0.cold_timer> < <serv.time>)
    src.damage <R4,10>,dam_cold,<topobj>
    src.EFFECT 3 i_fx_smoke 0 24 0 99 2
    sfx 05C7
    IF !<R19>
        src.stonned <R5,8>
    endif        
    tag.cold_timer=<eval <serv.time>+<R15.0,65.0>>
endif

[EVENTS T_WEAPON_PESTILENCE]
ON=@CDAMAGE
if !(<attr>&01) //se não tá identificado
    return 0
endif

if (<tag0.plage_timer> < <serv.time>)
    src.timerf 2 damage <R4,10>,dam_poison,<topobj>
    src.timerf 2 EFFECT 3 i_fx_explode 0 26 0 177 2
    sfx 0474
    IF !<R19>
        src.poison <R35.0,45.0>
    endif        
    tag.plage_timer=<eval <serv.time>+<R15.0,65.0>>
endif

[EVENTS T_WEAPON_TEMPEST]
ON=@CDAMAGE
if !(<attr>&01) //se não tá identificado
    return 0
endif

if (<tag0.lighting_timer> < <serv.time>)
    IF <R19>
        src.damage <R4,10>,dam_lightning,<topobj>
        src.EFFECT 2 i_fx_field_paralyze 6 16 0
        sfx 05C3
    ELSE
        src.damage <R10,17>,dam_lightning,<topobj>
        src.effect 1 0 0 0 0
        sfx SND_THUNDER
    ENDIF
    tag.lighting_timer=<eval <serv.time>+<R15.0,65.0>>
endif

[EVENTS e_machado_luna]
ON=@CDAMAGE
//Recarregar a cada 3 horas
if !(<attr>&01) //se não tá identificado
    return 0
endif

//Recarregar a cada 3 horas
if (!<morex>) && (!<tag0.loading>)
    tag.loading 1
    cont.sysmessageorange O Machado de Luna esta exaurido de suas forcas... Mas Luna ha de recarrega-lo em seu tempo!
    timerf 3600,wp_machado_luna_reload
endif

[FUNCTION wp_machado_luna_reload]
tag.loading=0
morex=2
more2=30

[EVENTS e_crescente_mond]
ON=@CDAMAGE
//Recarregar a cada 3 horas
if !(<attr>&01) //se não tá identificado
    return 0
endif

//Recarregar a cada 3 horas
if (!<morex>) && (!<tag0.loading>)
    tag.loading 1
    cont.sysmessageorange O Crescente de Mond esta exaurido de suas forcas... Mas Mond ha de recarrega-lo em seu tempo!
    timerf 3600,wp_crescente_mond_reload
endif

[FUNCTION wp_crescente_mond_reload]
tag.loading=0
morex=5
more2=350

[EVENTS e_pique_atila]
ON=@CDAMAGE
//Recarregar a cada 3 horas
if !(<attr>&01) //se não tá identificado
    return 0
endif

//Recarregar a cada 3 horas
if (!<morex>) && (!<tag0.loading>)
    tag.loading 1
    cont.sysmessageorange O Pique de Atila esta exaurido de suas forcas... Mas Atila ha de recarrega-lo em seu tempo!
    timerf 3600,wp_pique_atila_reload
endif

[FUNCTION wp_pique_atila_reload]
tag.loading=0
morex=2000
more2=20

[FUNCTION wp_spell]
ATTR=attr_magic
MORE2=<argn1> //spell
MOREX=<argn2> //charges

[TYPEDEF e_NoUntilID]
on=@equiptest
if !(<attr>&01) && (!<SRC.IsGM>)
 src.sysmessageorange <name> parece ter vontade propria.
 src.unequip
 return 1
endif

on=@DCLick
if !(<attr>&01) && (!<SRC.IsGM>)
 src.sysmessageorange Voce nao pode usar isto antes de saber o que realmente eh.
 return 1
endif

[FUNCTION ITEM_DEGRADATE]
IF (!<hits>)
 remove
ELSE
 HITS -= 1
 timerf <argn>,ITEM_DEGRADATE
ENDIF

//*****************************************************************************
// e_combat
//*****************************************************************************
[EVENTS e_combat] 
//*************************************
// @KILL
//*************************************
//SRC:killer
//SRC.ACT:victim
ON=@KILL
//serv.log <src.name> -- <src.act.name>
event_kill

//*************************************
// @HITTRY
//*************************************
//SRC:      esta apanhando
//DEFAULT:  esta atacando
//ARGN1:    tempo (speed?) pro hit
//o tempo eh dado em decimos de segundo
//o tempo de swing eh dado por  15000/(speed*(dex+100)) [segundos]
//o menor valor é 5 (0.5 segundos)
ON=@HITTRY
//serv.log [HITTRY] <serv.time> <name> contra <src.name> <eval <actdiff>> <eval <argn1>>
//sai do modo batalha se alvo invul, morto, desmaiado, escondido, etc
if ( <src.flags>&(statf_invul|statf_dead|statf_invisible|statf_insubstantial|statf_stone|statf_hidden))
 serv.log [HITTRY] <src.account> - <account>
 flags &= ~statf_war
 update
 return 1
endif

//sempre acerta.
actdiff=1000

//event de Town
TRIGGER @TownHit,<DEF.TAT_AS_ARGN><src>

//fix do bug causado pelo uso do TDATA4 como hitpoints
if <WEAPON.type>==t_weapon_bow
    if !<WEAPON.AMMOANIM>
        WEAPON.AMMOANIM=i_arrow_x
    endif
elif <WEAPON.type>==t_weapon_xbow
    if !<WEAPON.AMMOANIM>
        WEAPON.AMMOANIM=i_xbolt_x
    endif
endif    

//*************************************
// @HITMISS - somente evita mensagem de miss
//*************************************
ON=@HITMISS
return 1

//*************************************
// @HIT
//*************************************
//SRC:      esta apanhando
//DEFAULT:  esta atacando
//ARGN1:    dano
ON=@HIT

//serv.log [HITTRY] <name> contra <src.name> [<dlocal.a>(<dLOCAL.ga>)/<dlocal.d>(<dLOCAL.gd>)/<dlocal.c>] <eval <actdiff>>

if !<cmb_tryHit>
   return 1
endif

//salva special move se for usado
f_trySpecialMove
//LOCAL.specialmove=<f_trySpecialMove>
//USE TAG0.specialmove_active

//calcula dano base [entre minimo e maximo do golpe]
//ignora dano calculado pelo sphere
argn1=<cmb_calcBaseDam>

//salva escudo (ou arma) em OBJ
OBJ=<src.findlayer.layer_hand2>

//se puder bloquear
if <cmb_tryBlockAtk <argn1>>
    return 1
endif

//Se a arma na HAND1 estiver com algum efeito
if <DEF.WPE_<eval <argo.more2>>>
    serv.log [WPE] <eval <argo.more2>>
    TRY cmb_wpe_<eval <argo.more2>>
endif

//soma special move no dano base
TRY LOCAL.sm = <<DEF.SMO<eval <TAG0.specialmove_active>>_FUNC>>
argn1       += <LOCAL.sm>           //ate 30

//


if (<Eval <Var.CombatSystem>>) || (<Eval <src.tag0.combatenovo>>) //==========================[se o sistema de combate novo está ativado

  LOCAL.A_CS = <Eval <cmb_getActSkill>>     //Atacante Combat Skill
  LOCAL.D_CS = <Eval <src.cmb_getActSkill>> //Defensor Combat Skill

  LOCAL.CombatDmg = ((<Eval <LOCAL.A_CS> > / 10) / 1) - 50 //skill -50, varia o dano do atacante entre -50% e +50% de bonus imutavel.

  //testes se a skill do defensor passa do limite, evita diminuir demais o dano, mas permite que aumente além do maximo

  //teste de força
  if (<Src.Str> <= 100)
    LOCAL.StrDif = ((<I.Str> - <SRC.Str>) / 2) 
  else
    LOCAL.StrDif = ((<I.Str> - 100) / 2) //100
  endif


  //teste de tactics
  if (<Src.Tactics> <= 1250)  
     LOCAL.TacticsDif  = (<Eval <I.Tactics> - <SRC.Tactics>> / 10) / 2  //adiciona até 60% de bonus de dano e penalidade
      LOCAL.TacticsDif  = (<Eval <I.Tactics> - <SRC.Tactics>> / 10) / 2  //adiciona até 60% de bonus de dano e penalidade
  else
     LOCAL.TacticsDif  = (<Eval <I.Tactics> - 1250> / 10) / 2
  endif


  //teste de anatomy
  if (<Src.Anatomy> <= 1250) 
    LOCAL.AnatoDif  = (<Eval <I.Anatomy> - <SRC.Anatomy>> / 10) / 2    //adiciona até 60% de bonus de dano e penalidade
      LOCAL.AnatoDif  = (<Eval <I.Anatomy> - <SRC.Anatomy>> / 10) / 2    //adiciona até 60% de bonus de dano e penalidade
  else
    LOCAL.AnatoDif  = (<Eval <I.Anatomy> - 1250> / 10) / 2
  endif



  LOCAL.DmgPercent = 100 //setando a porcentagem pra 100% (dano normal)


  LOCAL.DmgPercent += <Eval <LOCAL.StrDif> + <LOCAL.CombatDif> + <LOCAL.TacticsDif> + <LOCAL.AnatoDif> > //calculando a porcentagem

  if (<LOCAL.DmgPercent> < 50) //cap minimo de 50% do dano atual (no caso 50% = redução de 50% do dano, 100% seria o dano normal)
     LOCAL.DmgPercent = 50
  endif


  if (<Eval <Var.CombatSystemPVP>>)        //se o dano pela metade estiver ligado
     if (<I.isplayer>)       //se atacante for jogador
        if (<src.isplayer>)  //se defensor for jogador
          ARGN1 = <Eval (<ARGN1> * <LOCAL.DmgPercent>) / 150> //calculando o dano //quebrando o dano pela metade
        endif
      endif
  else
     ARGN1 = <Eval (<ARGN1> * <LOCAL.DmgPercent>) / 100> //calculando o dano //dando o dano normal
  endif


  If (<Eval <ARGN1>> < 1) //se dano for menor que 1, torna ele 1
     ARGN1 = 1
  ENDIF


else //===================================================================================[se for o antigo

  LOCAL.bonus = 0
  LOCAL.bonus += <cmb_bonusStr>       //0 a 33%
  LOCAL.bonus += <cmb_bonusAnatomy>   //0 a 50%
  LOCAL.bonus += <cmb_bonusTactics>   //0 a 50%
  LOCAL.bonus += <tag0.moddam>        //?
  LOCAL.bonus += <TRIGGER @Hitting,<DEF.TAT_AS_ARGN>,<ARGN1>,<ARGN2>>

  LOCAL.penal = 0
  //LOCAL.penal += <cmb_penalPoison>    //REVER
  LOCAL.penal += <cmb_penalStam>      //0 a 50%
  LOCAL.penal += <cmb_penalWeight>    //0 a 50%
  LOCAL.penal += <cmb_penalWeaponQuality> //0 a 50%

  cmb_npcUsePoison
  cmb_gainSkill <argn1>
  cmb_damageArmor <argn1>
  cmb_damageWeapon
  cmb_doSounds

  ///// APLICA Modificadores de dano em %
  LOCAL.bonus -= <LOCAL.penal>

  //serv.log [COMBAT] BonusTotal%:<dLOCAL.bonus>

  


if (<Eval <Var.CombatSystemPVP>>)        //se o dano pela metade estiver ligado
     if (<I.isplayer>)       //se atacante for jogador
        if (<src.isplayer>)  //se defensor for jogador
          argn1 += <eval (<argn1>*<LOCAL.bonus>)/150> //calculando o dano //quebrando o dano pela metade
        endif
      endif
  else
     argn1 += <eval (<argn1>*<LOCAL.bonus>)/100> //calculando o dano //dando o dano normal
  endif


endif //===================================[terminando de verificar se é o combate novo ou antigo


cmb_doDamage <argn1>,<cmb_damType>

/////cansar atacante
if (<stam> >= 6)
    stam -= <R2>
endif

/////desconcentrar vítima
if (<src.mana> >= 6)
    src.mana -= <R2>
endif

///// Remove Special Moves
if (<TAG0.specialmove_active>)
    f_clrSpecialMove
endif

/////Executar script do @CDamage (custom) da arma
if (<argo>)
    argo.trigger @CDAMAGE
endif

return 1

//*************************************
ON=@GETHIT
//*************************************
//e_combat deve estar como TEVENT para ser chamado sempre por ultimo
//nao pode haver GetHit direto nos CHARDEF por que eles nao serao chamados
//usar como EVENT ou como TEVENT desde que seja antes do e_combat
//argn1:    damage
//argn2:    type
//SRC:      atacante
//DEFAULT:  vitima

/////Se estiver invulnerável, deixa queto.
if (<flags>&statf_invul)
    return 1
///// Bloquear dano se imune
elif (<argn2>&<tag0.immune>)
    DORAND 2
        src.sysmessageorange <name> parece ser imune a este tipo de ataque.
        emotered ileso
    ENDDO
    return 1
///// Piorar dano se agravante
elif (<tag0.aggravate>&<argn2>)
    LOCAL.agg=<R120,150>         //Agrava sempre de 20 a 50% de dano
    argn1 = <eval (<argn1>*<LOCAL.agg>)/100>
    DORAND 2
        act.sysmessageorange <name> parece muito assustado com este tipo de ataque.
        emotered dor
    ENDDO
///// Adicionar HITS se regenera com dano
elif (<tag0.regendam>&<argn2>)
    hits += <argn1>
    DORAND 2
       act.sysmessageorange <name> parece melhor agora do que antes do ataque.
       emotered aliviado
    ENDDO
    return 1
endif

disturb

///// Amenizar dano se resistente (compativel com OSI e Sphere original)
LOCAL.res=0
if (<argn2>&(dam_pierce|dam_slash|dam_physical)
    if (<SRC.TAG0.specialmove_active>!=1) && (<SRC.TAG0.specialmove_active>!=23)    //Não permite se usando IgnoreAR ou ARPierce
        LOCAL.res=<AR>
    else
        LOCAL.res=0
    endif
elif (<argn2>&dam_fire)
    LOCAL.res=<RESFIRE>
elif (<argn2>&dam_cold)
    LOCAL.res=<RESCOLD>
elif (<argn2>&dam_poison)
    LOCAL.res=<RESPOISON>
elif (<argn2>&dam_energy)
    LOCAL.res=<RESENERGY>
endif

//absorve dano
argn1=<BETWEEN2 1,<argn1>,<LOCAL.res>,100>

/////aos damage (show counter above player head)
if <argn1> > 0
    if !<src.npc>
        SRC.SENDPACKET  0bf W11 W022 01 D<uid> B<argn1>
    endif        
    LOCAL.damaged=<uid>
    FORPLAYERS 10
        if <isonline> && (<uid>!=<src>)
            SENDPACKET  0bf W11 W022 01 D<LOCAL.damaged> B<argn1>
        endif
    ENDFOR

    //// anima
    cry
endif

////decrementa pontos
hits -= <argn1>
if <hits> > 0
    ////perpetuar agreção
    if (<NPC>) && !(<src.flags>&statf_invul) && !<memoryfindtype.memory_fight>
        attack <src>
    endif
else
    //players abortam no @DEATH, fazendo com que o @KILL nao seja chamado (no atacante) na sequencia
    //corrige esse comportamento
    if !<npc>
        src.trigger @KILL
    endif
endif

//src.TRIGGER @TownHit,<DEF.TAT_AS_ARGN><uid>

return 1

//*************************************
// @SPELLEFFECT
//*************************************
//argn1=spell
//argn2=magery skill
//SRC=caster
//DEFAULT=target
ON=@SPELLEFFECT

sk_magic_resist <argn1>,<argn2>

//se tiver script custom para a spell
if <DEF.SPE_<argn1>>
    serv.log [SPE] <argn1>
    return <cmb_spe_<argn1> <argn2>>
endif

//*************************************
// @USERSPECIALMOVE
//*************************************
ON=@USERSPECIALMOVE
tag.specialmove=<argn1>
sysmessagegreen Movimento Especial: <DEF.SMO<eval <tag0.specialmove>>_NAME>

//*************************************
// @ITEMUNEQUIP
//*************************************
ON=@ITEMUNEQUIP
//Cancela o special move se desequipar a arma
if (<f_isWeapon <act>>)
    f_clrSpecialMove
endif



//*****************************************************************************
//*****************************************************************************
// FUNCTIONs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// combate
//*****************************************************************************
[FUNCTION combate]
ctag.roll=<eval (<tag0.agr>*24)+70>
src.dialog d_estrategia
return 1

//*****************************************************************************
// cmb_damageSrcArmor
//*****************************************************************************
[FUNCTION cmb_damageSrcArmor]
//serv.log [cmb_damageSrcArmor] <src.account> sofre hit em <argv0> de <argv1>
REF1=<src.findlayer.<argv0>>
if !<REF1>
    return 1
endif
REF1.more1l -= <eval <argv1>/6>
if <REF1.more1l> > 08000
    if !<npc> // se não for NPC...
        sysmessageorange A protecao de <src.name> [<REF1.name>] foi totalmente arruinada!
    endif
    if !<src.npc> // Se o defensor não for NPC...
        src.sysmessageorange Sua protecao [<REF1.name>] foi totalmente arruinada!
    endif
    REF1.remove
else
    REF1.update
endif 

//*****************************************************************************
// cmb_damageSrcCloth
//*****************************************************************************
[FUNCTION cmb_damageSrcCloth]
//serv.log [cmb_damageSrcCloth] <src.account> sofre hit em <argv0> de <argv1>
REF1=<src.findlayer.<argv0>>
if !<REF1>
    return 1
endif
REF1.more1l -= 1//<eval <argv1>/5>
if <REF1.more1l> > 08000
    if !<npc> // se não for NPC...
        sysmessageorange <REF1.name> de <src.name> foi totalmente arruinada!
    endif
    if !<src.npc> // Se o defensor não for NPC...
        src.sysmessageorange <REF1.name> foi totalmente arruinada!
    endif
    REF1.remove
else
    REF1.update
endif 

//*****************************************************************************
// cmb_getActSkill
//*****************************************************************************
[FUNCTION cmb_getActSkill]
if (<action> == SKILL_WRESTLING)
    return <wrestling>
elif (<action> == SKILL_FENCING)
    return <fencing>
elif (<action> == SKILL_SWORDSMANSHIP)
    return <swordsmanship>
elif (<action> == SKILL_MACEFIGHTING)
    return <macefighting>
elif (<action> == SKILL_ARCHERY)
    return <archery>
endif

return 0

//*****************************************************************************
// cmb_calcBaseDam 
//*****************************************************************************
[FUNCTION cmb_calcBaseDam]

//weapon or unarmed?
if <weapon>
    LOCAL.d=<R<weapon.dam>>+<weapon.modar>      //Random weapon dam + weapon modar
else
    LOCAL.d=<R<dam>>
endif

if !<LOCAL.d>
    LOCAL.d=<R1,4>
endif    

//serv.log [COMBAT] BaseDam:<dLOCAL.d>

return <LOCAL.d>


//*****************************************************************************
// cmb_tryHit
//*****************************************************************************
[FUNCTION cmb_tryHit]
//LOCAL.ga=<eval (<tag0.agr>/2)+10>     //10 - 15
//LOCAL.gd=<eval 15-(<src.tag0.agr>/2)>    //15 - 10


if (!<Eval <Var.CombatSystem>>) //se o sistema de combate novo está desativado

//====[calculo antigo]====
  LOCAL.a=<eval <cmb_getActSkill>*50>
  LOCAL.d=<eval <LOCAL.a>/(<src.cmb_getActSkill>+1)>
  LOCAL.c=<eval <LOCAL.d>+<tag0.agr>+<src.tag0.agr>+10>

  if <R100> <= <LOCAL.c>
      return 1
  endif

else

//calculo novo

  LOCAL.A_CS = <Eval <cmb_getActSkill>>     //Atacante Combat Skill
  LOCAL.D_CS = <Eval <src.cmb_getActSkill>> //Defensor Combat Skill

  LOCAL.DexDif    = ((<I.Dex> - <SRC.Dex>) / 2)
  LOCAL.CombatDif = (<Eval <LOCAL.A_CS> - <LOCAL.D_CS>> / 10) / 2
  LOCAL.WrestDif  = (<Eval <I.Wrestling> - <SRC.Wrestling>> / 10) / 2

  
  //impedir que o mob tenha esquiva demais se a dex dele passar de 100 (skill de combate e wrest não tem hardcap)

  if (<Eval <LOCAL.DexDif>> > 50)
    LOCAL.DexDif = 50
  elseif (<Eval <LOCAL.DexDif>> < -50)
    LOCAL.DexDif = -50
  ENDIF

//calculando o acerto usando uma base de 50% de chance de acertar
  Local.Acerto = 50 + <Local.DexDif> + <Local.CombatDif> + <Local.WrestDif>


//criando um cap minimo e maximo de acerto
  IF (<Eval <Local.Acerto>> < 20)      //porcentagem minima = 20
     Local.Acerto = 20
  ELSEIF (<Eval <Local.Acerto>> > 80)  //porcentagem maxima = 80
     Local.Acerto = 80
  ENDIF
 

//verificando se acertou
  if ( <Eval Rand(0, 101)> > <Local.Acerto> ) //se errar o ataque
      src.emoteyellow Esquivou
      Return 1
  ENDIF


endif //verificação se o sistema de combate novo está ligado


if !<npc>
    sysmessageyellow <src.name> esquiva-se de seu golpe!
endif
if !<src.npc>
    src.sysmessageyellow Voce se esquiva do golpe!
endif
//som e animação
dorand 5
    sfx 0239
    sfx 023a
    sfx 0233
    sfx 0238
    sfx 0232
enddo 
anim 18

return 0

//*****************************************************************************
// cmb_tryBlockAtk <damage>,<defensive_factor_in_%>
//*****************************************************************************
[FUNCTION cmb_tryBlockAtk]

//se tiver escudo ou arma, tenta parrying 
//se o special move nao for IGNORE AR ou ARMOR PIERCE e passar no teste
if  ( (<OBJ.type>!=t_shield) && !<src.weapon>) || (<TAG0.specialmove_active>==1) || (<TAG0.specialmove_active>==23)
    return 0
elif <src.flags>&(statf_stone|statf_freeze)
    return 0
endif

//ganha parrying independente se defende ou nao
//mas evita macros
if <argn1> > 5 
    src.skill_gain skill_parrying 
endif

if <OBJ.type>==t_shield
    LOCAL.p=<eval <src.parrying>/3>
else    
    LOCAL.p=<eval <src.parrying>/6>
endif    

//se falhar no teste
if <R1000> > <LOCAL.p>
    return 0
endif

I.emoteyellow Apara

if !<npc>
    sysmessageyellow <src.name> apara seu golpe!
endif
if !<src.npc>
    src.sysmessageyellow Voce apara o golpe!
endif

//som e animacao
dorand 4
    sfx 0237
    sfx 0236
    sfx 023c
    sfx 023b
enddo
anim 19

if <OBJ.type>!=t_shield
    return 1
endif

//danifica escudo (mace da maior dano)
if (<action> == skill_macefighting)
    OBJ.hits -= <eval <argn1>/3>
else
    OBJ.hits -= <eval <argn1>/6>
endif
//serv.log [DAM] <argn1> <OBJ.name> <OBJ.hits>

//caso escudo destruido
if (<OBJ.hits> > 08000 ) && !(<OBJ.attr> & attr_newbie)
    if !<NPC>
        sysmessageorange O escudo de <src.name> foi totalmente arruinado!
    endif
    if !<src.NPC>
        src.sysmessageorange Seu escudo foi totalmente arruinado!
    endif
    OBJ.remove
else
    //atualiza HITS do escudo
    OBJ.update
endif

return 1

//*****************************************************************************
// cmb_wpe_17 -- bless
//*****************************************************************************
[FUNCTION cmb_wpe_17]
src.effect 2 i_fx_heal_effect 0 32 0
src.spelleffect s_bless <tactics> <uid>
weapon.morex -= 1
if !<weapon.morex>
    weapon.more2=0
endif

//*****************************************************************************
// cmb_wpe_20 -- poison
//*****************************************************************************
[FUNCTION cmb_wpe_20]
if (<action>==skill_archery)
//Arcos
    return 0    //depende da flecha e do Special Move
elif ((<weapon.morex> <= 150) || (<weapon.morex> > 2000))
//Armas melee perdendo a carga
    weapon.more2=0
    weapon.morex=0
    if !(strmatch(<weapon.tag.name>,)
        weapon.name <weapon.tag.name>
    endif
    weapon.color=<weapon.tag0.color>
    sysmessageorange sua arma nao esta mais envenenada.
    weapon.update
else
//Armas melee com carga
    //Tenta envenenar
    if ( (!<R20>) || (<BELLTEST <TACTICS>,<weapon.morex>,10.0>) ) && (!<src.IsPoisoned>)
        src.veneno <weapon.morex>
    endif
    serv.log [<weapon.name>] :: <weapon.morex> :: <eval <weapon.morex>/100>>
    src.damage <eval <weapon.morex>/100>> dam_poison <uid>
    weapon.morex=<eval (<weapon.morex>*50)/51>
endif

//*****************************************************************************
// cmb_wpe_30 -- lightning
//*****************************************************************************
[FUNCTION cmb_wpe_30]
if <R4>
    return
endif   
src.spelleffect 30 75.0 <uid>
src.sfx snd_thunder
weapon.morex -= 1
if !<weapon.morex>
    weapon.more2=0
endif

//*****************************************************************************
// cmb_wpe_38 -- paralyse
//*****************************************************************************
[FUNCTION cmb_wpe_38]
src.effect 2 i_fx_heal_effect 0 32 0 09c
src.stun <R3,6>
src.emotered paralizado
weapon.morex -= 1
if !<weapon.morex>
    weapon.more2=0
endif

//*****************************************************************************
// cmb_wpe_51 -- flamestrike
//*****************************************************************************
[FUNCTION cmb_wpe_51]
src.effect 2 i_fire_column 0 32 0
src.damage <R5,10> dam_fire <uid>
weapon.morex -= 1
if !<weapon.morex>
    weapon.more2=0
endif

//*****************************************************************************
// cmb_wpe_350 -- chill
//*****************************************************************************
[FUNCTION cmb_wpe_350]
if <R6>
    return
endif    
src.spelleffect_chill <tactics>
weapon.morex -= 1
if !<weapon.morex>
    weapon.more2=0
endif

//*****************************************************************************
// cmb_spe_11 -- cure <skill_amt>
//*****************************************************************************
[FUNCTION cmb_spe_11]
if <restest 1 i_veneno>
    findid.i_veneno.more2 -= <eval <argn1>/30>
    if (<findid.i_veneno.more2> >= 08000) || (<findid.i_veneno.more2> <= 0)
        findid.i_veneno.remove
        flags &= ~statf_poisoned
        update
        sysmessageblue O veneno foi removido do seu corpo!
    else        
        sysmessageblue Voce se sente um tanto melhor. 
    endif
    return 1
elif <restest 1 i_mry_peste>
    if (<argn1> <= 1000)
        sysmessagered A cura foi muito fraca para amenizar a peste.
    else
        src.findid.i_mry_peste.more2=(<src.findid.i_mry_peste.more2>/3)
        sysmessageblue Voce se sente um pouco melhor.
    endif
    return 1
endif
return 0

//*****************************************************************************
// cmb_spe_18 -- fireball <skill_amt>
//*****************************************************************************
//s_Fireball. Manter dano somente dam_magic|dam_fire, tirando o dam_physical.
[FUNCTION cmb_spe_18]
damagespell s_Fireball,dam_magic|dam_fire,<src.magery>,<src>
return 1

//*****************************************************************************
// cmb_spe_20 -- poison <skill_amt>
//*****************************************************************************
[FUNCTION cmb_spe_20]
veneno <argn1>
effect 2 i_fx_curse 0 30 0
update
return 1
 
//*****************************************************************************
// cmb_bonusStr
//*****************************************************************************
[FUNCTION cmb_bonusStr]
//serv.log [COMBAT] BonusStr:<eval <str>/3>
return <eval <str>/3>

//*****************************************************************************
// cmb_bonusAnatomy
//*****************************************************************************
[FUNCTION cmb_bonusAnatomy]
//serv.log [COMBAT] BonusAnatomy:<eval <anatomy>/20>
return <eval <anatomy>/20>

//*****************************************************************************
// cmb_bonusTactics
//*****************************************************************************
[FUNCTION cmb_bonusTactics]
//serv.log [COMBAT] BonusTactics:<eval <tactics>/20>
return <eval <tactics>/20>

//*****************************************************************************
// cmb_penalPoison
//*****************************************************************************
[FUNCTION cmb_penalPoison]
if (<restest 1 i_veneno>)
    if !<R3>
        sysmessagegreen O veneno esta te enfraquecendo. Seus golpes estao fracos!
    endif
//    serv.log [COMBAT] PenalPoison:<eval <findid.i_veneno.more2>/15>
    return <eval <findid.i_veneno.more2>/15>
endif
return 0

//*****************************************************************************
// cmb_penalStam
//*****************************************************************************
[FUNCTION cmb_penalStam]
LOCAL.q = <eval (50*<stam>)/<maxstam>>
//serv.log [COMBAT] PenalStam:<eval 50-<LOCAL.q>>
return <eval 50-<LOCAL.q>>

//*****************************************************************************
// cmb_penalWeight
//*****************************************************************************
[FUNCTION cmb_penalWeight]
//serv.log [COMBAT] PenalWeight:<eval (50*<weight>)/<maxweight>>
return <eval (50*<weight>)/<maxweight>>

//*****************************************************************************
// cmb_penalWeaponQuality
//*****************************************************************************
[FUNCTION cmb_penalWeaponQuality]
if (<weapon>)
    LOCAL.q = <eval (50*<weapon.hits>)/<weapon.maxhits>>
//    serv.log [COMBAT] PenalWeaponQuality:<eval 50-<LOCAL.q>>
    return <eval 50-<LOCAL.q>>
endif
return 0

//*****************************************************************************
// cmb_damType
//*****************************************************************************
[FUNCTION cmb_damType]
if (<weapon.type>==t_weapon_fence)||(<weapon.type>==t_weapon_bow)||(<weapon.type>==t_weapon_mace_pick)||(<weapon.type>==t_weapon_arrow)||(<weapon.type>==t_weapon_xbow)||(<weapon.type>==t_weapon_bolt)
    return <def.dam_pierce>
elif (<weapon.type>==t_weapon_mace_sharp)||(<weapon.type>==t_weapon_sword)||(<weapon.type>==t_weapon_axe)
    return <def.dam_slash>
endif
return <def.dam_physical>

//*****************************************************************************
// cmb_hitLocation
//*****************************************************************************
[FUNCTION cmb_hitLocation]

//se atacante for NPC, deixa acertar qualquer parte do corpo
if <NPC>
    LOCAL.t=10
//se for player, testa tactics    
else    
    LOCAL.t=<eval <tactics>/100>
endif

dorand (<LOCAL.t>)
    return 1    //torax
    return 1    //torax
    return 2    //mao
    return 3    //braco
    return 4    //perna
    return 4    //perna
    return 1    //torax
    return 1    //torax
    return 5    //pescoco
    return 6    //cabeca
    return 6    //cabeca
    return 6    //cabeca
    return 6    //cabeca
enddo
return 6

//*****************************************************************************
// cmb_damageArmor <damage>
//*****************************************************************************
[FUNCTION cmb_damageArmor]
//somente danifica armadura de jogador
if !<SRC.NPC>
    doswitch <cmb_hitLocation>
        src.emotered 1
        BEGIN
            cmb_damageSrcArmor layer_chest,<argn1>
            cmb_damageSrcCloth { layer_shirt layer_tunic layer_robe },<argn1>
        END
        BEGIN
            cmb_damageSrcArmor layer_gloves,<argn1>
            cmb_damageSrcCloth layer_wrist,<argn1>
        END
        BEGIN
            cmb_damageSrcArmor layer_pants,<argn1>
            cmb_damageSrcArmor layer_legs,<argn1>//Só para plate, que é outra layer
            cmb_damageSrcCloth { layer_skirt layer_cape layer_robe },<argn1>
        END
        BEGIN
            cmb_damageSrcArmor layer_arms,<argn1>
            cmb_damageSrcCloth { layer_shirt layer_tunic layer_robe },<argn1>
        END
        BEGIN
            cmb_damageSrcArmor layer_helm,<argn1>
            cmb_damageSrcCloth { layer_shoes layer_tunic layer_half_apron },<argn1>
        END
    enddo        
endif 

//*****************************************************************************
// cmb_damageWeapon
//*****************************************************************************
[FUNCTION cmb_damageWeapon]
//somente danifica armas de jogador
if !<NPC> && <weapon>
    weapon.hits -= <R0,1>
    if (<weapon.hits> > 08000 )
        sysmessageorange Sua arma foi destruida!
        if !<src.NPC>
            src.sysmessageorange A arma de <src.name> foi destruida!
        endif
        weapon.remove
    else
        if <weapon.hits> > <weapon.maxhits>
            serv.log [COMBATE] arma <weapon> com hits <weapon.hits> > <weapon.maxhits>
            weapon.hits=<weapon.maxhits>
        endif
        weapon.update
    endif
 
    if <action>==Skill_Archery
        weapon.morey -= 1
        if (!<weapon.morey>) || (<weapon.morey><0)
            weapon.morey=0
            if <weapon.type>==t_weapon_bow
               sysmessageorange O barbante do seu arco se partiu!
               emoteorange barbante quebrou
               weapon.name=<weapon.tag.name> (sem barbante)
            else
               sysmessageorange A engrenagem de sua besta se quebrou!
               emoteorange engrenagem quebrou
               weapon.name=<weapon.tag.name> (sem engrenagem)
            endif   
//            weapon.update
            weapon.cont=<findlayer.layer_pack>
        endif
    endif
endif

//*****************************************************************************
// cmb_doSounds
//*****************************************************************************
[FUNCTION cmb_doSounds]
if (<action> == skill_wrestling)
    dorand 4
        sfx 014a
        sfx 013d
        sfx 0137
        sfx 013b
    enddo
elif (<action> == skill_swordsmanship) || (<action> == skill_fencing)
    dorand 4
        sfx 0237
        sfx 0236
        sfx 023c
        sfx 023b
    enddo
elif (<action> == skill_macefighting)
    dorand 4
        sfx 0149
        sfx 0143
        sfx 0146
        sfx 023b
    enddo
elif (<action> == skill_archery)
    //doubleshot?
    if (<TAG0.specialmove_active>==22)
        sfx 0523
    else
        if (<weapon.tag0.sfx>)
            sfx <weapon.tag0.sfx>
        else
            sfx 0234
        endif
    endif        

    //flecha coletável?
    if (<weapon.tag0.colect>) && (!<R3>)
        serv.newitem <weapon.ammotype>
        new.cont=<src>
    endif
endif

//*****************************************************************************
// cmb_doDamage <hits>,<type>
//*****************************************************************************
[FUNCTION cmb_doDamage]
//dano minimo é 1
if (<argn1> <= 0)
    argn1=1
endif

///// Transfere e aplica dano
src.damage <argn1> <argn2> <uid>

if (<weapon.damfire>)
    src.damage <weapon.damfire> dam_fire <uid>
endif
if (<weapon.damcold>)
    src.damage <weapon.damcold> dam_cold <uid>
endif
if (<weapon.damenergy>)
    src.damage <weapon.damenergy> dam_energy <uid>
endif
if (<weapon.dampoison>)
    src.damage <weapon.dampoison> dam_poison <uid>
endif

///// Double strike? Double shot? Dual Yeld?
if (<TAG0.specialmove_active>==7) || (<TAG0.specialmove_active>==22) || (<TAG0.specialmove_active>==21)
    //src.timerf 1,damage,<argn1>,<LOCAL.tipo>,<uid>
    local.dam=<R<weapon.dam>>
    local.dam=<muldiv <local.dam>,100,<src.armor>+100>
    src.damage <local.dam>,<LOCAL.tipo>,<uid>
endif


//*****************************************************************************
// cmb_gainSkill <damage>
//*****************************************************************************
[FUNCTION cmb_gainSkill]

//atacante archer precisa ganhar tactics aqui pq nao toma melee pra desviar
if <action>==SKILL_ARCHERY
    skill_gain SKILL_ARCHERY
    skill_gain SKILL_TACTICS
endif

//evita macros para ganhar tactics apanhando
if <argn1> > 5
    src.skill_gain SKILL_TACTICS 
endif

//*****************************************************************************
// cmb_npcUsePoison
//*****************************************************************************
[FUNCTION cmb_npcUsePoison]
// Se eu for um animal venenoso e a minha presa não está envenenada...
if (<poisoning> >= 300) && <NPC> && !<src.ispoisoned>
    if (<R1000> < <poisoning>) && !<R4>
        src.veneno <poisoning>
        emotered aplica veneno
    endif
endif

//*****************************************************************************
//*****************************************************************************
// GUMPs
//*****************************************************************************
//*****************************************************************************

[DIALOG d_estrategia]
200, 150
noclose
nomove
PAGE 0
gumppic 0 0 1140
gumppic 61 88 1143
gumppic 136 41 2445
text 153 41 1101 0
text 65 69 455 1
text 263 69 455 2
button <eval <ctag0.roll>> 94 2117 2118 0 0 0
button 45 95 2223 2223 1 0 1
button 328 95 2224 2224 1 0 2
button 137 118 2117 2118 1 0 3
button 137 139 2117 2118 1 0 4
button 137 161 2117 2118 1 0 5
text 159 114 1345 3
text 159 136 1345 4
text 158 156 1345 5
button 156 196 249 248 1 0 6

[DIALOG d_estrategia TEXT]
Estrategia
Defensiva
Agressiva
Agressiva
Defensiva
Neutra

[DIALOG d_estrategia BUTTON]
on=1
if (<tag0.agr><=0)
 tag.agr=0
 DIALOG d_estrategia
 return 1
endif
tag.agr=<eval (<tag0.agr>-1)>
ctag.roll=<eval (<tag0.agr>*24)+70>
DIALOG d_estrategia
return 1

on=2
if (<tag0.agr>>=10)
 tag.agr=10
 DIALOG d_estrategia
 return 1
endif
tag.agr=<eval (<tag0.agr>+1)>
ctag.roll=<eval (<tag0.agr>*24)+70>
DIALOG d_estrategia
return 1

on=3
tag.agr=10
ctag.roll=(<tag.agr>*24)+70
DIALOG d_estrategia
return 1

on=4
tag.agr=0
ctag.roll=(<tag.agr>*24)+70
DIALOG d_estrategia
return 1

on=5
tag.agr=5
ctag.roll=(<tag.agr>*24)+70
DIALOG d_estrategia
return 1

on=6
return 1

[EOF]
