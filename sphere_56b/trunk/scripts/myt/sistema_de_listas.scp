//*****************************************************************************
//*****************************************************************************
//
// SISTEMA DE LISTAS e GUMPs por UsMarine (vinicius.arroyo at gmail.com)
//
//
// USAGE:
// create a new list with list_new
// create columns definitions with list_newCol or list_newDbCol
// set actions handlers (list_setAction,list_setActionBack)
// populate cache manually setting CTAGs or automaticaly from MYSQL with list_loadFromDb
// show gump with list_show
// 
//*****************************************************************************
//*****************************************************************************
//TODO:

//API:
//list_new <title>              //creates a new list gump
//list_setAction <func>         //specify a function to call when a row button is pressed
//list_setActionBack <func>     //specify a function to call when the return button is pressed
//list_newCol <x>,<name>        //set column parameters
//list_newDbCol <x>,<db>,<name> //set column parameters when getting data from mysql
//list_loadFromDb <query>       //run query and create cache table on CTAGS
//list_show [<page>]            //shows created gump
//prompt_new <title>            //creates a new prompt gump
//prompt_setAction <func>       //specify a function to call when the ok button is pressed
//prompt_setActionBack <func>   //specify a function to call when the return button is pressed
//prompt_show                   //shows created gump
//ynprompt_show                 //shows created gump with only YES or NO options.


//TAGS:
//cTAG.list_page                //current page being viewed
//cTAG.list_numItems            //total itens
//cTAG.list_numPages            //total pages
//cTAG.list_title               //gump title
//cTAG.list_columns             //number of columns
//cTAG.list_column<x>_x         //spacing of columns relative to the left border
//cTAG.list_column<x>_header    //column title
//cTAG.list_column<x>_db        //db column
//cTAG.list_row<y>_<x>          //row data
//cTAG.list_action              //function to call when an item is selected <function <idItem>>
//cTAG.list_action_back         //function to call when user click return button
//cTAG.list_query               //query to run if getting data from MYSQL
//cTAG.prompt_title             //gump title
//cTAG.prompt_action            //function to call when ok button is pressed
//cTAG.prompt_action_back       //function to call when user click return button

//*****************************************************************************
//*****************************************************************************
// DEFNAMEs
//*****************************************************************************
//*****************************************************************************

[DEFNAME list_constants]
list_itemsPerPage=15      //items mostrados na tela por pag.

//*****************************************************************************
//*****************************************************************************
// FUNCTIONs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// list_test
//*****************************************************************************
[FUNCTION list_test]
list_new Teste de Listagem
list_newCol 25,Head 1
list_newCol 95,Head 2

cTAG.list_numItems=2
cTAG.list_row01_01=L 1/1
cTAG.list_row01_02=L 1/2
cTAG.list_row02_01=L 2/1
cTAG.list_row02_02=L 2/2
cTAG.list_numPages=1

list_show 1
//*****************************************************************************
// list_new <title>
//*****************************************************************************
[FUNCTION list_new]
cTAG.list_title=<args>
cTAG.list_columns=0
cTAG.list_action=list_no_action
cTAG.list_action_back=

//*****************************************************************************
// list_setAction <function>
//*****************************************************************************
[FUNCTION list_setAction]
cTAG.list_action=<args>

//*****************************************************************************
// list_setActionBack <function>
//*****************************************************************************
[FUNCTION list_setActionBack]
cTAG.list_action_back=<args>

//*****************************************************************************
// list_newCol <spaceFromLeftBorder>,<name>
//*****************************************************************************
[FUNCTION list_newCol]
cTAG.list_columns += 1

TRY cTAG.list_column<cTAG.list_columns>_x=<argv0>
TRY cTAG.list_column<cTAG.list_columns>_header=<argv1>

//*****************************************************************************
// list_newDbCol <spaceFromLeftBorder>,<dbColumnName>,<name>
//*****************************************************************************
[FUNCTION list_newDbCol]
cTAG.list_columns += 1

TRY cTAG.list_column<cTAG.list_columns>_x=<argv0>
TRY cTAG.list_column<cTAG.list_columns>_db=<argv1>
TRY cTAG.list_column<cTAG.list_columns>_header=<argv2>

//*****************************************************************************
// list_loadFromDb <query>
//*****************************************************************************
//load list cache data from mysql
//user MUST specify:
//cTAG.list_columns             //number of columns
//cTAG.list_column<x>_db        //db column
[FUNCTION list_loadFromDb]

if !<DB.connected>
    src.sysmessagered DB desligado.
    return 0
endif

CTAG.list_numItems=0
DB.QUERY <args>
if (<DB.ROW.NUMROWS> > 0)
    for R 0 <eval <DB.ROW.NUMROWS>-1>
        CTAG.list_numItems += 1
        for C <cTAG.list_columns>
            TRY CTAG.list_row<CTAG.list_numItems>_<LOCAL.C>=<DB.ROW.<eval <LOCAL.R>>.<cTAG.list_column<LOCAL.C>_db>>
        endfor
    endfor
endif

CTAG.list_numPages=<eval (((<CTAG.list_numItems>-1) / list_itemsPerPage) + 1)> 

//*****************************************************************************
// list_show [<page>]
//*****************************************************************************
[FUNCTION list_show]
if <argn>
    cTAG.list_page=<argn>
endif

if !<CTAG.list_numItems>
    sysmessageyellow Nada encontrado...
    if (!<IsEmpty <cTAG.list_action_back>>)
        try <cTAG.list_action_back>
    endif
else
    dialog d_list
endif

//*****************************************************************************
// list_no_action
//*****************************************************************************
[FUNCTION list_no_action]
serv.log [LIST] - Selected ID <argn>
sysmessagegreen [LIST] - Selected ID <argn>

//*****************************************************************************
// prompt_new <title>
//*****************************************************************************
[FUNCTION prompt_new]
cTAG.prompt_title=<args>
cTAG.prompt_action=prompt_no_action
cTAG.prompt_action_back=

//*****************************************************************************
// prompt_setAction <function>
//*****************************************************************************
[FUNCTION prompt_setAction]
cTAG.prompt_action=<args>

//*****************************************************************************
// prompt_setActionBack <function>
//*****************************************************************************
[FUNCTION prompt_setActionBack]
cTAG.prompt_action_back=<args>

//*****************************************************************************
// prompt_show
//*****************************************************************************
[FUNCTION prompt_show]
dialog d_prompt

//*****************************************************************************
// ynprompt_show
//*****************************************************************************
[FUNCTION ynprompt_show]
dialog d_ynprompt

//*****************************************************************************
//*****************************************************************************
// GUMPs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// d_list - gump que gera uma lista
//*****************************************************************************
[DIALOG d_list]
100,100
page 0

LOCAL.startItem=<eval ((<SRC.CTAG0.list_page> - 1) * list_itemsPerPage ) + 1>
LOCAL.endItem=<eval (<SRC.CTAG0.list_page> * list_itemsPerPage)>

if ( <LOCAL.endItem> > <SRC.CTAG0.list_numItems> )
    LOCAL.endItem = <SRC.CTAG0.list_numItems>
endif 

LOCAL.pageLen=<eval 103+(<LOCAL.endItem>-<LOCAL.startItem>)*20>

resizepic 0 0 83 654 <LOCAL.pageLen>
dtext 12 9 37 <SRC.CTAG0.list_title>

dorigin 14 29
dtext *0 *0 0 
LOCAL.columns=<SRC.CTAG0.list_columns>
for x <LOCAL.columns>
    dtext +<SRC.CTAG0.list_column<LOCAL.x>_x> - 2100 <SRC.CTAG0.list_column<LOCAL.x>_header>
endfor    

for y <LOCAL.startItem> <LOCAL.endItem> 
    //cria entrada no dialog
    button - *20 2117 2118 1 0 <eval (1000 + <LOCAL.y>)>
    //
    for x <LOCAL.columns>
        dtext +<SRC.CTAG0.list_column<LOCAL.x>_x> -3 2100 <SRC.CTAG0.list_row<LOCAL.y>_<LOCAL.x>>
    endfor    
endfor

if (<SRC.CTAG0.list_page> > 1)
    // Back button
   button 12 <eval <LOCAL.pageLen>-30> 9766 9767 1 0 1
endif
if (<SRC.CTAG0.list_page> < <SRC.CTAG0.list_numPages>)
    // Forward button
   button 628 <eval <LOCAL.pageLen>-30> 9762 9703 1 0 2
endif
dtext 290 <eval <LOCAL.pageLen>-30> 2100 Pag <eval <SRC.CTAG0.list_page>> / <eval <SRC.CTAG0.list_numPages>>

if !<isempty <CTAG.list_action_back>>
    button 530 <eval <LOCAL.pageLen>-27> 2117 2118 1 0 3
    dtext 550 <eval <LOCAL.pageLen>-30> 2100 Voltar
endif

[DIALOG d_list button]
on=0
return 1

on=1 // Back button
SRC.CTAG0.list_page -= 1
if (<SRC.CTAG.list_page> < 1)
    SRC.CTAG.list_page=1
endif
dialog d_list

on=2 // Forward button
src.CTAG0.list_page += 1
if (<SRC.CTAG.list_page> > <SRC.CTAG0.list_numPages>)
    SRC.CTAG.list_page=<SRC.CTAG0.list_numPages>
endif
dialog d_list

on=3 // Return button
TRY <CTAG.list_action_back>

on=1001,65535 //itens buttons
TRY <CTAG.list_action> <eval <argn> - 1000>


//*****************************************************************************
// d_prompt - gump que faz uma pergunta
//*****************************************************************************
[DIALOG d_prompt]
175,175
page 0
resizepic 4 5 2620 345 180
dhtmlgump 21 28 315 68 1 1 <cTAG.prompt_title>
//dtext 21 28 2100 <cTAG.prompt_title>
resizepic 21 105 3000 315 25
dtextentry 32 108 290 20 0 1 
button 102 142 247 248 1 0 1
button 185 142 241 242 1 0 2

[DIALOG d_prompt text]

[DIALOG d_prompt button]
//close
ON=0
if !<isempty <CTAG.prompt_action_back>>
    TRY <CTAG.prompt_action_back>
endif    

//ok
ON=1
TRY <CTAG.prompt_action> <argtxt[1]>

//cancel
ON=2
if !<isempty <CTAG.prompt_action_back>>
    TRY <CTAG.prompt_action_back>
endif    

//*****************************************************************************
// d_ynprompt - gump que faz uma pergunta sim ou não
//*****************************************************************************
[DIALOG d_ynprompt]
175,175
noclose
page 0
resizepic 4 5 2620 345 180
dhtmlgump 21 28 315 100 1 1 <cTAG.prompt_title>
button 102 142 247 248 1 0 1
button 185 142 241 242 1 0 2

[DIALOG d_ynprompt text]

[DIALOG d_ynprompt button]
//ok
ON=1
TRY <CTAG0.prompt_action>

//cancel
ON=2
if !<isempty <CTAG.prompt_action_back>>
    TRY <CTAG.prompt_action_back>
endif    
[EOF]
