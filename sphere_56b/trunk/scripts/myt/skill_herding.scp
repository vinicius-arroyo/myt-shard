//*****************************************************************************
//*****************************************************************************
//
// SISTEMA DE ANIMAIS por
//
//  Silver
//  UsMarine (vinicius.arroyo at gmail.com)
//
//*****************************************************************************
//TODO:

//USO:
//Utilize o .pastor pra selecionar a funcionalidade do cajado (i_cajado_pastor)
//Utilize (dclick) no cajado, selecione o animal e a acao.
//Reproducao:
//Selecione a femea primeiro, selecione entao o macho e aguarde os resultados.
//Para ter sucesso os animais tem que ter uma idade minima, o procriador tem
//que ter animal lore minimo e a femea tem que estar 'disponivel'

//as caracteristicas de dex/int/str sao derivadas do pai e da mae aleatoriamente

//animais suportados para reproducao:

//c_pig
//c_pig_big
//c_chicken
//c_galo
//c_sheep_wooly
//c_sheep_shorn
//c_vaca / c_vaca2
//c_vaca2 / c_vaca
//c_touro2 / c_touro
//c_touro / c_touro2
//c_horse_tan / c_horse_brown_dk / c_horse_gray / c_horse_brown_lt / c_horse_white / c_horse_black
//c_llama

//TAGS usadas:
//tag.stop          //usado para parar uma acao
//ctag.anim_action  //opcao padrao de uso do cajado

[PLEVEL 0]
pastor

[DEFNAME animais]
minReprodAge    = 2*24*60*60*10//48 horas de tempo minimo antes de poder reproduzir
minReprodDelay  = 2*60*60*10   //2 horas de tempo minimo antes reproduzir novamente
incReprodDelay  = 45*60*60*10  //45 minutos de acrécimo antes de reproduzir novamente
minRetryDelay   = 3*60*10      //3 minutos antes de tentar apos falha

//*****************************************************************************
//*****************************************************************************
// EVENTs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// e_cajado_pastor
//*****************************************************************************
//usado como TEVENT nos cajados de pastor
//**esse evento nao tem sido reconhecido no sphere mais novo, conflito com o type do item q tem o event q é chamado antes dele.
[EVENTS e_cajado_pastor]

//nao tire, algum bug previne de usar o próximo trigger
ON=@CLICK

ON=@DCLICK
src.anim_tool_dclick
return 1

//*****************************************************************************
//*****************************************************************************
// FUNTCIONs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// pastor
//*****************************************************************************
//escolhe o modo de uso do cajado
[FUNCTION pastor]
src.menu anim_commands

//*****************************************************************************
// anim_domestico
//*****************************************************************************
//configura um animal como domestico procriavel
[FUNCTION anim_domestico]
tag.born=<serv.time>

dorand 2
    tag.sexo=1      //macho
    tag.sexo=2      //femea
enddo

//*****************************************************************************
// anim_tool_dclick
//*****************************************************************************
[FUNCTION anim_tool_dclick]
equip
doswitch 0<src.ctag.anim_action>
    src.sysmessageyellow Use o .pastor para escolher a acao.
    src.sysmessageyellow Selecione a femea que deseja acasalar:    
    src.sysmessageyellow Selecione o animal que ira mover:
    src.sysmessageyellow Selecione o animal que ira atacar:
    src.sysmessageyellow Selecione o animal que ira defender:
    src.sysmessageyellow Selecione o animal que sera transferido:
    src.sysmessageyellow Selecione o animal que sera amigo:
    src.sysmessageyellow Selecione o animal que desejar que siga:
    src.sysmessageyellow Selecione o animal que deseja parar:
    src.sysmessageyellow Selecione o animal que deseja soltar:
    src.sysmessageyellow Selecione o animal que deseja soltar:
enddo

if (0<src.ctag.anim_action>)
    targetf anim_tool_target
endif
return 1


//*****************************************************************************
// anim_tool_target (uid,[step]) //or argo
//*****************************************************************************
[FUNCTION anim_tool_target]

if (0<argv0>)
    ref2=<argv0>
else
    ref2=<argo>
endif

//É NPC?
if (0<ref2>==0) || (<ref2>>=040000000) || ( (0<ref2.npc>!=brain_animal) && !(<ref2.flags>&statf_conjured) )
 src.sysmessageyellow Animal invalido.
 return 1
endif

if <src.flags>&statf_dead
 src.sysmessageyellow Nao pode comandar estando morto...
 return 1
endif

//so aceita se for o dono/amigo do animal/npc
if (<ref2.ismypet>) || (<ref2.memoryfindtype.memory_friend.link>==<src.uid>)
    ref2.tag.stop=
    
    sfx <serv.chardef.<ref2.id>.sound>

    if (!0<argv1>)
        if (<src.ctag.anim_action>==1)
            ref2.anim_reprod
        elif (<src.ctag.anim_action>==2)
            src.sysmessageyellow Para onde quer que ele(a) va?
            targetfg anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==3)
            src.sysmessageyellow Atacar quem?
            targetf anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==4)
            src.sysmessageyellow Defender quem?
            targetf anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==5)
            src.sysmessageyellow Transferir para quem?
            targetf anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==6)
            src.sysmessageyellow Fazer amizade com quem?
            targetf anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==7)
            src.sysmessageyellow Seguir quem?
            targetf anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==8)
            ref2.anim_stop
        elif (<src.ctag.anim_action>==9)
            ref2.anim_wander
        elif (<src.ctag.anim_action>==10)
            ref2.anim_release
        endif
    else
        if (<src.ctag.anim_action>==2)
            ref2.anim_move <targp>
            src.sysmessageyellow Mover novamente? Para onde?
            targetfg anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==3)
            ref2.anim_attack <argo>
            src.sysmessageyellow Selecione outro alvo se desejar:
            targetfg anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==4)
            ref2.anim_guard <argo>        
            src.sysmessageyellow Selecione outro alvo se desejar:
            targetfg anim_tool_target <ref2>,1
        elif (<src.ctag.anim_action>==5)
            ref2.anim_transfer <argo>
        elif (<src.ctag.anim_action>==6)
            ref2.anim_friend <argo>
        elif (<src.ctag.anim_action>==7)
            ref2.anim_follow <argo>
        endif
    endif
else
    src.sysmessageyellow Esse animal nao lhe pertence.
endif
return 1

//*****************************************************************************
// anim_tool_area ([step])
//*****************************************************************************
//usado para comandar multiplos animais
[FUNCTION anim_tool_area]

if (!0<argv0>)
    if (<src.ctag.anim_action>==2)
        src.sysmessageyellow Para onde quer que eles vao?
        targetfg anim_tool_area 1
    elif (<src.ctag.anim_action>==3)
        src.sysmessageyellow Atacar quem?
        targetf anim_tool_area 1
    elif (<src.ctag.anim_action>==4)
        src.sysmessageyellow Defender quem?
        targetf anim_tool_area 1
    elif (<src.ctag.anim_action>==7)
        src.sysmessageyellow Seguir quem?
        targetf anim_tool_area 1
    else
        forchars 10
            if (<ismypet>) && (<npc> != brain_none) 
                if (<src.ctag.anim_action>==8)
                    anim_stop
                elif (<src.ctag.anim_action>==9)
                    anim_wander
                endif
            endif
        endfor
    endif    
else
    forchars 10
        if (<ismypet>) && (<npc> != brain_none) 
            if (<src.ctag.anim_action>==2)
                anim_move <src.targp>
            elif (<src.ctag.anim_action>==3)
                anim_attack <argo>
            elif (<src.ctag.anim_action>==4)
                anim_guard <argo>        
            elif (<src.ctag.anim_action>==7)
                anim_follow <argo>
            endif        
        endif
    endfor

    if (<src.ctag.anim_action>==2)
        src.sysmessageyellow Para onde quer que eles vao?
        targetfg anim_tool_area 1
    elif (<src.ctag.anim_action>==3)
        src.sysmessageyellow Atacar quem?
        targetf anim_tool_area 1
    elif (<src.ctag.anim_action>==4)
        src.sysmessageyellow Defender quem?
        targetf anim_tool_area 1
    elif (<src.ctag.anim_action>==7)
        src.sysmessageyellow Seguir quem?
        targetf anim_tool_area 1
    endif

endif

//*****************************************************************************
// anim_reprod
//*****************************************************************************
[FUNCTION anim_reprod]
if (0<tag.sexo>==1)
    src.sysmessageyellow Voce deve selecionar uma femea...
elif ( <eval <serv.time>-<tag0.born>> <= minReprodAge ) 
    src.sysmessageyellow Muito jovem para reproduzir.
elif ( <serv.time> < <tag0.prenha> )
    src.sysmessageyellow Deve esperar antes de reproduzir novamente.
elif ( <tag0.births> > 4)
    src.sysmessageyellow Essa femea ja saiu da idade fertil.
elif ( !<src.belltest <src.herding>,<taming>> ) 
    src.sysmessageyellow Voce falhou ao tentar incitar a reproducao.
    tag.prenha=<eval <serv.time>+minRetryDelay>
//so inicia acasalamento se for femea, com idade, nao prenha e com animallore suficiente
else
    serv.newitem i_criador
    new.link=<uid>
    new.cont=<src>  
    new.dclick
    return 1
endif
src.sysmessageyellow O animal volta a sua rotina.

//*****************************************************************************
// anim_move
//*****************************************************************************
[FUNCTION anim_move]
npc_move <args>

//*****************************************************************************
// anim_attack
//*****************************************************************************
[FUNCTION anim_attack]

REF1=<argv0>
if !(0<REF1>) || (<REF1>>=040000000)
    src.sysmessageyellow Selecione um ser vivo.
    return 1
endif

if (<src.anim_skillcheck <uid>>)
    emotered atacando
    attack <ref1>
    src.act=<ref1>
    src.TRIGGER @TownHit
else
    emotered ignora o comando
endif

//*****************************************************************************
// anim_guard
//*****************************************************************************
[FUNCTION anim_guard]

REF1=<argv0>
if !(0<REF1>) || (<REF1>>=040000000)
    src.sysmessageyellow Selecione um ser vivo.
    return 1
elif (0<REF1>==<src>)    
    src.sysmessageyellow Selecione outra pessoa. Seu bixano ja lhe protege.
    return 1
endif

if (<src.anim_skillcheck <uid>>)
    emotegreen defendendo
    guard <REF1>
else
    emotered ignora o comando
endif

//*****************************************************************************
// anim_transfer
//*****************************************************************************
[FUNCTION anim_transfer]
REF1=<argv0>

if !(0<REF1>) || (<REF1>>=040000000) || (0<REF1.npc>)
    src.sysmessageyellow Selecione um personagem jogador.
    return 1
elif (<REF1.tam_playerFreeSlots> < <tam_animalSlots>)
    src.sysmessageyellow O personagem nao pode ter esse animal...
    return 1
else

//if (<src.anim_skillcheck <uid>>)
    emotegreen aceita o novo dono
    tam_undoPet
    tam_setPet <REF1>
//else
//    emotered rejeita o novo dono
//    if !(<R2>)
//        attack <REF1>
//    endif
//endif

//*****************************************************************************
// anim_friend
//*****************************************************************************
[FUNCTION anim_friend]
REF1=<argv0>

if !(0<REF1>) || (<REF1>>=040000000)
    src.sysmessageyellow Selecione um ser vivo.
    return 1
endif

if (<src.anim_skillcheck <uid>>)
    emotegreen aceita o amigo
    friend <REF1>
else
    emotered rejeita o amigo
    if !(<R2>)
        attack <REF1>
    endif
endif

//*****************************************************************************
// anim_follow
//*****************************************************************************
[FUNCTION anim_follow]

REF1=<argv0>

if !(0<REF1>) || (<REF1>>=040000000)
    src.sysmessageyellow Selecione um ser vivo.
    return 1
endif

//if (<src.anim_skillcheck <uid>>)
    emotegreen segue
    npc_follow <REF1>
//else
//    emotered rejeita o comando
//endif

//*****************************************************************************
// anim_stop
//*****************************************************************************
[FUNCTION anim_stop]
emotegreen para
npc_stop

//*****************************************************************************
// anim_wander
//*****************************************************************************
[FUNCTION anim_wander]
emotegreen fica a vontade
npc_wander

//*****************************************************************************
// anim_release
//*****************************************************************************
[FUNCTION anim_release]
emotegreen esta livre
npc_release
tam_undoPet

//*****************************************************************************
// anim_skillcheck( checkAgainsUid )
//*****************************************************************************
[FUNCTION anim_skillcheck]

REF2=<argv0>

//npcs sumonados aceitam qualquer comando e nao ganha skill
if (<REF2.flags>&statf_conjured)
    return 1
endif

if (<serv.time> > <src.ctag0.an_ts>)
    dorand 2
        src.skill_gain skill_animal_lore
        src.skill_gain skill_herding
    enddo
endif
//so ganha skill a cada 3 segundos, para evitar abuso do sistema
src.ctag0.an_ts=<eval <serv.time>+30>

//faz uma ponderacao entre herding e animallore para valor maximo
LOCAL.sk=<eval (<src.herding>*8)+(<src.animallore>*4)>
LOCAL.sk=<eval <LOCAL.sk>+(<src.taming>*4)>
//da bonus se tiver com o cajado
if (<src.findlayer.layer_hand2.baseid>==i_cajado_pastor)
    LOCAL.sk=<eval <LOCAL.sk>/6>
else
    LOCAL.sk=<eval <LOCAL.sk>/9>
endif

//define valor minimo para teste de skill
LOCAL.si=<eval <LOCAL.sk>-300>
if (<LOCAL.si> < 0)
    LOCAL.si=0
endif

//serv.log <dLOCAL.si>/<dLOCAL.sk> contra <REF2.taming> do <REF2.name>

//testa comparando com taming do alvo
if (<R<LOCAL.si>,<LOCAL.sk>> > <REF2.taming>)
    //tem que passar em um teste de fome tambem
    if (<R<REF2.maxfood>> <= <REF2.food>)
        return 1
    endif
endif
return 0

//*****************************************************************************
// f_giveBirth
//*****************************************************************************
[FUNCTION f_giveBirth]

if (<link.id>==c_pig_big)
    if (!<R0,5>)
        LOCAL.c=1
        LOCAL.f=c_pig_big
    else
        LOCAL.c=4
        LOCAL.f=c_pig
    endif
elif (<link.id>==c_pig)    
    LOCAL.c=2
    LOCAL.f=c_pig
elif (<link.id>==c_chicken)
    link.emoteyellow botou ovos
    serv.newitem i_ninho
    new.p=<link.p>
    return 1
elif (<link.id>==c_sheep_woolly) || (<link.id>==c_sheep_shorn)
    LOCAL.c=1
    LOCAL.f=c_sheep_shorn
elif (<link.id>==c_vaca)
    LOCAL.c=1
    dorand 2
        LOCAL.f=c_vaca
        LOCAL.f=c_touro
    enddo
elif (<link.id>==c_vaca2)
    LOCAL.c=1
    dorand 2
        LOCAL.f=c_vaca2
        LOCAL.f=c_touro2
    enddo
else
    LOCAL.c=1
    LOCAL.f=<link.id>
endif

link.emoteyellow da a luz
serv.newitem=i_blood_pool_large
new.p=<link.p>
new.timer=5
new.attr=02

//generate some stats
dorand 2
    LOCAL.str=<link.str>
    LOCAL.str=<cont.str>
enddo
dorand 2
    LOCAL.dex=<link.dex>
    LOCAL.dex=<cont.dex>
enddo
dorand 2
    LOCAL.int=<link.int>
    LOCAL.int=<cont.int>
enddo

while (<local.c>>0)
    LOCAL.c -= 1
    serv.newnpc <LOCAL.f>
    new.movenear <link> 1
    new.str=<LOCAL.str>
    new.dex=<LOCAL.dex>
    new.int=<LOCAL.int>
    new.anim_domestico
    serv.log criando <LOCAL.f> / <new>
endwhile

if (!<R0,15>)
    link.emotered morreu
    link.suicide
else
    link.anim 3
    link.tag.births = <link.tag0.births>+1
endif


//*****************************************************************************
//*****************************************************************************
// ITEMDEFs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// i_eggs_fresh
//*****************************************************************************
[ITEMDEF 09b5]
DEFNAME=i_eggs_fresh
NAME=ovos
VALUE=1
TYPE=T_FOOD_RAW
TDATA1=i_eggs_fried
WEIGHT=0.1
CATEGORY=MyT - Items by Professions
SUBSECTION=Cook
DESCRIPTION=Eggs

ON=@STEP
sfx 0040
src.emotered quebra os ovos
remove

//*****************************************************************************
// i_ninho
//*****************************************************************************
[ITEMDEF i_ninho]
ID=01AD4
NAME=ninho 
TYPE=t_script
CATEGORY=MyT - Items by Professions
SUBSECTION=Farmer
DESCRIPTION=ninho de galinha

ON=@DCLICK
serv.newitem i_eggs_fresh
new.amount=<morex>
new.bounce
serv.newitem i_ninho_vazio
new.p=<p>
remove
return 1

ON=@CREATE
timer=600
morex=<R4,6>

ON=@TIMER


    if (<R0,1> == 0)
        for R 1 4
            serv.newnpc c_chicken
            new.p=<p>
        endfor
    else
        for R 1 2
            serv.newnpc c_galo
            new.p=<p>
        endfor
    endif

    serv.newitem i_ninho_ovo
    new.attr=012
    new.timer=3*24*60*60//3 dias
    new.p=<p>
    new.emotered os ovos chocaram

    remove
    sector.allclients update
return 1

//*****************************************************************************
// i_ninho_vazio
//*****************************************************************************
[itemdef i_ninho_vazio]
ID=01ad5
NAME=ninho (vazio)
CATEGORY=MyT - Items by Professions
SUBSECTION=Farmer
DESCRIPTION=ninho vazio

ON=@CREATE
timer=60
attr=attr_decay


//*****************************************************************************
// i_criador
//*****************************************************************************
[ITEMDEF i_criador]
ID=i_memory
NAME=Criador
TYPE=t_eq_script

ON=@DCLICK
src.sysmessageyellow Selecione o macho:
target 
return 1

ON=@TARGON_CHAR

if (<src.targ.tag.sexo>==2)
    src.sysmessageyellow Voce deve selecionar um macho...
elif !(<src.targ.memoryfindtype.memory_ipet.link>==<src.uid>)
    src.sysmessageyellow Esse animal nao lhe pertence.
elif (<eval <serv.time>-<src.targ.tag.born>> <= minReprodAge )
    src.sysmessageyellow Muito jovem para reproduzir.
elif (<src.targ> == <link>)
    src.sysmessageyellow Nao pode reproduzir sozinho.
else 
    if (<src.targ.id>==<link.id>) //animais com mesmo body
        LOCAL.do=1
    elif ( (<src.targ.id>==c_sheep_woolly) || (<src.targ.id>==c_sheep_shorn) ) && ( (<link.id>==c_sheep_woolly) || (<link.id>==c_sheep_shorn) )        
        LOCAL.do=1
    elif ( (<src.targ.id>==c_touro2) || (<src.targ.id>==c_touro) ) && ( (<link.id>==c_vaca) || (<link.id>==c_vaca2) )
        LOCAL.do=1
    elif (<src.targ.id>==c_galo) && (<link.id>==c_chicken)
        LOCAL.do=1
    else
        src.sysmessageyellow Nao pode cruzar animais de racas diferentes.
        remove
        return 1
    endif

    src.sysmessagegreen Aguarde enquanto a natureza segue seu curso.


    if ( <src.anim_skillcheck <link.herding>> )
        morey=1     //vai sair filhote no final?
        link.tag.prenha=<eval <serv.time>+(minReprodDelay*<link.tag0.births>)>
    else
        morey=0     //vai sair filhote no final?
        link.tag.prenha=<eval <serv.time>+minRetryDelay>
    endif
    
    cont=<src.targ> //move memory to father
    timer=1
    morex=15        //tempo de acasalamento (s)
    cont.ctag.disturb=0
    cont.tag.disturb=0 	//fix this later
    link.ctag.disturb=0
    return 1
endif

remove
return 1

on=@targon_ground
remove
return 1

on=@targon_item
remove
return 1

ON=@TIMER
timer=1

if (<link.f_isDisturbed>) || (<cont.f_isDisturbed>)
    remove
    return 1
elif (<link.distance <cont>> > 1)
    cont.f_npcRunStepToUid <link>,1
    return 1
endif

morex -= 1
dorand 2
    sfx <serv.chardef.<link.id>.sound>
enddo

if !(<morex>)
    if (<morey>)
        f_giveBirth
    else
        link.emoteyellow nao engravidou
    endif
    remove
else
    if (<link.id>==c_pig_big) || (<link.id>==c_pig)
        LOCAL.s=roooinc
    elif (<link.id>==c_sheep_woolly) || (<link.id>==c_sheep_shorn)
        LOCAL.s=beehhhh
    elif (<link.id>==c_vaca2) || (<link.id>==c_vaca) || (<link.id>==c_touro) || (<link.id>==c_touro2)
        LOCAL.s=muhhhhh
    elif (<link.id>==c_chicken)
        LOCAL.s=cooohhh
    else
        LOCAL.s=geme
    endif

    dorand 3
        link.emoteyellow <LOCAL.s>
        cont.emoteyellow <LOCAL.s>
    enddo
endif
return 1

//*****************************************************************************
//*****************************************************************************
// MENUs
//*****************************************************************************
//*****************************************************************************

[MENU anim_commands]
O que deseja fazer?

on=0 Procriar
    src.ctag.anim_action=1
    src.sysmessageyellow Use o cajado na femea para acasalar:

on=0 Mover
    src.ctag.anim_action=2
    src.sysmessageyellow Use o cajado no animal que quer mover:

on=0 Atacar
    src.ctag.anim_action=3
    src.sysmessageyellow Use o cajado no animal que quer comandar:

on=0 Defender
    src.ctag.anim_action=4
    src.sysmessageyellow Use o cajado no animal que quer comandar:
    
on=0 Transferir
    src.ctag.anim_action=5
    src.sysmessageyellow Use o cajado no animal que quer transferir:
    
on=0 Amigo
    src.ctag.anim_action=6
    src.sysmessageyellow Use o cajado no animal que quer tornar amigo:
    
on=0 Seguir
    src.ctag.anim_action=7
src.sysmessageyellow Use o cajado no animal que quer que siga:
 
on=0 Parar
    src.ctag.anim_action=8
    src.sysmessageyellow Use o cajado no animal que deseja parar:
    
on=0 Soltar [mantem como companheiro]
    src.ctag.anim_action=9
    src.sysmessageyellow Use o cajado no animal que deseja soltar:

on=0 Soltar [nao sera mais seu companheiro]
    src.ctag.anim_action=10
    src.sysmessageyellow Use o cajado no animal que deseja soltar:
    
[EOF]