//*****************************************************************************
//*****************************************************************************
//
// SISTEMA DE VENDAS por UsMarine (vinicius.arroyo at gmail.com)
//
// Precisa do sistema administrativo (administrative.scp) que contem:
//  =>f_sendMessage - para enviar alertas aos players mesmo offline.
//  =>f_isWeapon - define se o item eh uma arma
//  =>f_isArmor - define se o item eh uma armadura
//  =>f_isRegsOrMagic
//  =>f_isFood
//  =>f_isMisc
//  =>f_isWearable
//  =>f_isRaw
//
// Para usar:
// Execute .vendor_addNpc para abrir o menu com as opções de NPC
// A compra e venda é feita por comandos de fala. ex: "quero comprar"
// 
//*****************************************************************************
//*****************************************************************************
//TODO:
//-Limitar as strings que vao nos dialogs (clip)
//-Definir 'qualidade' para todos os tipos de items
//-Migrar tipos de items para o banco
//-Fazer sistema de guildas com privs alterar preço, retirar item, mandar em NPC guard, prender/soltar livros, Contratar mercenários, pedir emprestimo
//-Nao deixar comprar/vender se tiver longe do npc

//TAGS usadas:
//src.ctag.vendor_op        //1 para colocar o item a venda, 2 para comprar,3 para pegar de volta
//src.ctag.vendor_numPages  //numero de paginas do dialog do vendedor (1-x)
//src.ctag.vendor_page      //pagina atual (1-x)
//src.ctag.vendor_lastCatPage  //ultima pagina da lista de categorias
//src.ctag.vendor_lastListPage //ultima pagina da lista de items
//src.ctag.vendor_numItems  //numero total de itens disponiveis para compra/venda
//src.ctag.vendor_items     //array com itens disponiveis para compra/venda
//src.ctag.vendor_owners    //array com os donos dos itens a venda
//src.ctag.vendor_prices    //array com os precos de venda
//src.ctag.vendor_selectedItem  //item selecionada para compra/venda
//src.ctag.vendor_selectedPrice //preco do item selecionada para compra/venda
//src.ctag.vendor_selectedOwner //dono do item selecionada para compra/venda
//src.ctag.vendor_selectedNpc   //NPC selecionado para compra/venda
//src.ctag.vendor_selectedFilter//itemdef do filtro usado
//src.ctag.vendor_newNpcType    //tipo do npc sendo criado
//npc.tag.vendor_type       //tipo do npc

//CREATE TABLE  `mytserver`.`vendorItems` (
//  `id` int(10) unsigned NOT NULL auto_increment,
//  `timestamp` datetime NOT NULL,
//  `idVendor` int(10) unsigned NOT NULL,
//  `idPlayer` int(10) unsigned NOT NULL,
//  `idItem` int(10) unsigned NOT NULL,
//  `quantity` int(10) unsigned NOT NULL,
//  `price` float NOT NULL,
//  `playerName` varchar(45) NOT NULL,
//  `itemType` enum('Weapon','Armor','Magic','Food','Misc','Clothes','Raw') NOT NULL,
//  `defName` varchar(30) NOT NULL,
//  `itemName` varchar(45) NOT NULL
//  PRIMARY KEY  (`id`),
//  KEY `byItemId` (`idItem`),
//  KEY `byType` (`itemType`)
//) ENGINE=MyISAM AUTO_INCREMENT=14115 DEFAULT CHARSET=latin1;

//CREATE TABLE  `mytserver`.`tradeItems` (
//  `id` int(10) unsigned NOT NULL auto_increment,
//  `postDate` datetime NOT NULL,
//  `sellDate` datetime NOT NULL,
//  `idVendor` int(10) unsigned NOT NULL,
//  `idPlayerVendor` int(10) unsigned NOT NULL,
//  `idPlayerBuyer` int(10) unsigned NOT NULL,
//  `playerVendorName` varchar(45) NOT NULL,
//  `playerBuyerName` varchar(45) NOT NULL,
//  `idItem` int(10) unsigned NOT NULL,
//  `quantity` int(10) unsigned NOT NULL,
//  `price` float NOT NULL,
//  `itemType` enum('Weapon','Armor','Magic','Food','Misc','Clothes','Raw') NOT NULL,
//  `itemName` varchar(45) NOT NULL,
//  `defName` varchar(30) NOT NULL,
//  PRIMARY KEY  (`id`)
//) ENGINE=MyISAM AUTO_INCREMENT=8155 DEFAULT CHARSET=latin1;


//CREATE TABLE  `mytserver`.`merchant_values` (
//  `id` int(10) unsigned NOT NULL auto_increment,
//  `itemdef` varchar(45) NOT NULL,
//  `category` int(10) unsigned NOT NULL,
//  `itemname` varchar(45) NOT NULL,
//  `value` float NOT NULL default '0.1',
//  `region` varchar(45) NOT NULL default 'a_Kalesh',
//  PRIMARY KEY  (`id`)
//) ENGINE=MyISAM DEFAULT CHARSET=latin1;

//*****************************************************************************
//*****************************************************************************
// DEFNAMEs
//*****************************************************************************
//*****************************************************************************

[DEFNAME vendor_constants]
vendor_fee=5                //% de taxa do total que sera retirado pelo NPC na compra.
vendor_minFeePrice=5        //valor minimo da compra que faz com que o NPC cobre taxa
vendor_itemsPerPlayer=150    //total de items que um player pode vender
vendor_itemsPerId=5         //quantos items de mesmo id(tipo) pode ter repetido no vendor

vendor_itemsPerPage=15      //items mostrados na tela do vendedor por pag.
vendor_weeksToExpire=8      //quantas semanas leva pra o item ser devolvido se nao for vendido

vendor_type_weapons=1       //lista dos tipos de vendedores
vendor_type_armor=2
vendor_type_magic=3
vendor_type_food=4
vendor_type_misc=5
vendor_type_clothes=6
vendor_type_raw=7


//*****************************************************************************
//*****************************************************************************
// FUNCOES
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// vendor_createTakebackList
//*****************************************************************************
//verifica os itens do vendor no banco e cria a lista de itens do player
//
//SRC é o player
[FUNCTION vendor_createTakebackList]
SRC.CTAG.vendor_page=1
SRC.CTAG.vendor_numItems=0
SRC.CTAG.vendor_op=3    //devolucao

REF1=<SRC.CTAG0.vendor_selectedNpc>

//varre o banco
if ( <DB.connected> )
    DB.QUERY "SELECT * FROM vendorItems WHERE idPlayer=<eval <SRC>> && idVendor=<eval <REF1>>"
    if (<DB.ROW.NUMROWS> > 0)
        for R 0 <eval <DB.ROW.NUMROWS>-1>
        SRC.CTAG.vendor_numItems += 1
        TRY SRC.CTAG.vendor_items<eval  (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.idItem>
        TRY SRC.CTAG.vendor_owners<eval (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
        TRY SRC.CTAG.vendor_prices<eval (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.price>
        end
    endif

    DB.QUERY "SELECT * FROM vendorItems WHERE idPlayer=<eval <SRC>> && idVendor!=<eval <REF1>>"
    if (<DB.ROW.NUMROWS> > 0)
        for R 0 <eval <DB.ROW.NUMROWS>-1>
            REF2=<DB.ROW.<eval <LOCAL.R>>.idVendor>
            //NPC FOI DELETADO!!
            if !<REF2>
                //serv.log [VENDOR]Takeback item de NPC removido <DB.ROW.<eval <LOCAL.R>>.idItem>/<DB.ROW.<eval <LOCAL.R>>.idPlayer>
                
                SRC.CTAG.vendor_numItems += 1
                TRY SRC.CTAG.vendor_items<eval  (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.idItem>
                TRY SRC.CTAG.vendor_owners<eval (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
                TRY SRC.CTAG.vendor_prices<eval (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.price>
            endif
        end
    endif
endif

SRC.CTAG.vendor_numPages=<eval (((<SRC.CTAG.vendor_numItems>-1) / vendor_itemsPerPage) + 1)> 
return 1

//*****************************************************************************
// vendor_createPlayerList
//*****************************************************************************
//verifica a backpack do player e gera uma lista com os itens que o vendedor
//pode vender
//
//SRC é o player
[FUNCTION vendor_createPlayerList]
SRC.CTAG.vendor_page=1
SRC.CTAG.vendor_numItems=0
//SRC.CTAG.vendor_op=1    //NPC pega para vender ('compra')

REF1=<SRC.CTAG0.vendor_selectedNpc>

if ( <DB.connected> )
    DB.QUERY "SELECT COUNT(id) AS CNT FROM vendorItems WHERE idPlayer=<eval <SRC>>"
    if <DB.ROW.0.CNT> >= <DEF.vendor_itemsPerPlayer>
        src.sysmessageyellow Voce nao pode colocar mais items a venda. 
        src.sysmessageyellow O limite e de <eval <DEF.vendor_itemsPerPlayer>> items por jogador.
        return 0
    endif
endif

//varre a bag
LOCAL.type=<REF1.TAG.vendor_type>
forcont <SRC.findlayer.layer_pack> 0
    if ( <vendor_matchItemType <LOCAL.type>,<uid>> )
        SRC.CTAG.vendor_numItems += 1
        TRY SRC.CTAG.vendor_items<eval (<SRC.CTAG.vendor_numItems>)>=<uid>
    endif
endfor

SRC.CTAG.vendor_numPages=<eval (((<SRC.CTAG.vendor_numItems>-1) / vendor_itemsPerPage) + 1)> 
return 1

//*****************************************************************************
// vendor_createVendorMasterList
//*****************************************************************************
//verifica os itens do vendor no banco e cria a lista com tipos de itens a venda.
//(agrupados por defnames)
//
//SRC é o player
[FUNCTION vendor_createVendorMasterList]

SRC.CTAG.vendor_page=1
SRC.CTAG.vendor_numItems=0
SRC.CTAG.vendor_op=2    //NPC vende

REF1=<SRC.CTAG0.vendor_selectedNpc>

//varre o banco
if ( <DB.connected> )
    DB.QUERY "SELECT DISTINCT defName,itemName,COUNT(1) AS cnt FROM vendorItems WHERE idVendor=<eval <REF1>> GROUP BY defName ORDER BY itemName"
    if (<DB.ROW.NUMROWS> > 0)
        for R 0 <eval <DB.ROW.NUMROWS>-1>
            SRC.CTAG.vendor_numItems += 1
            TRY SRC.CTAG.vendor_subname<eval  (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.itemName>
            TRY SRC.CTAG.vendor_subcnt<eval (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.cnt>
            TRY SRC.CTAG.vendor_subdef<eval (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.defName>
        end
    endif
endif

SRC.CTAG.vendor_numPages=<eval (((<SRC.CTAG.vendor_numItems>-1) / vendor_itemsPerPage) + 1)> 
return 1

//*****************************************************************************
// vendor_createVendorSubList( defNameToFilter )
//*****************************************************************************
//verifica os itens do vendor no banco e cria a lista de venda do npc filtrada
//por defname
//
//SRC é o player
[FUNCTION vendor_createVendorSubList]
SRC.CTAG.vendor_page=1
SRC.CTAG.vendor_numItems=0
SRC.CTAG.vendor_op=2    //NPC vende
SRC.CTAG.vendor_selectedFilter=<args>
REF1=<SRC.CTAG0.vendor_selectedNpc>

local.removedPlayer=0
local.removedItem=0

//varre o banco
if ( <DB.connected> )
    //serv.log SELECT * FROM vendorItems WHERE idVendor=<eval <REF1>> AND defName='<args>'
    DB.QUERY "SELECT * FROM vendorItems WHERE idVendor=<eval <REF1>> AND defName='<args>'"
    if (<DB.ROW.NUMROWS> > 0)
        for R 0 <eval <DB.ROW.NUMROWS>-1>
            REF2=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
            REF3=<DB.ROW.<eval <LOCAL.R>>.idItem>
//            if (!<REF2.isplayer>)
//                serv.log [VENDOR] NOT PLAYER: <REF2>
//                local.removedPlayer=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
            if (!<REF3>)
                local.removedItem=<DB.ROW.<eval <LOCAL.R>>.idItem>
                serv.log [VENDOR] INVALID ITEM: <local.removedItem>
            else
                SRC.CTAG.vendor_numItems += 1
                TRY SRC.CTAG.vendor_items<eval  (<SRC.CTAG.vendor_numItems>)>=<REF3>
                TRY SRC.CTAG.vendor_owners<eval (<SRC.CTAG.vendor_numItems>)>=<REF2>
                TRY SRC.CTAG.vendor_prices<eval (<SRC.CTAG.vendor_numItems>)>=<DB.ROW.<eval <LOCAL.R>>.price>
            endif
        end
    endif
endif

if (<LOCAL.removedPlayer>)
    DB.EXECUTE "DELETE FROM vendorItems WHERE idPlayer=<eval <LOCAL.removedPlayer>>"
endif

if (<LOCAL.removedItem>)
    DB.EXECUTE "DELETE FROM vendorItems WHERE idItem=<eval <LOCAL.removedItem>>"
endif


SRC.CTAG.vendor_numPages=<eval (((<SRC.CTAG.vendor_numItems>-1) / vendor_itemsPerPage) + 1)> 
return 1

//*****************************************************************************
// vendor_calcTotalPrice( unitPrice, amount )
//*****************************************************************************
[FUNCTION vendor_calcTotalPrice]
 
if (<strpos 0 . <argv0> > > 0)
    FLOAT.totalPrice=<FLOATVAL ( <argv0>  * <eval <argv1>>) + 0.9>
    LOCAL.i=<strpos 0 . <FLOAT.totalPrice>>
    LOCAL.totalPrice=<strsub 0 <LOCAL.i> <FLOAT.totalPrice>>
else
    LOCAL.totalPrice=<eval <argv0> * <argv1>>
endif
return <LOCAL.totalPrice>

//*****************************************************************************
// vendor_sellNpcItem( item, preco TOTAL )
//*****************************************************************************
//coloca um item a venda no vendedor que sera revertido em dinheiro para cidade
//preco deve ser na menor moeda de menor valor, neste caso o cobre.
//esse tipo de venda nao permite devolucao ao player
//
//SRC deve ser o player vendedor
//DEFAULT deve ser o NPC vendor

[FUNCTION vendor_sellNpcItem]
REF2=<argv[0]>
if !(<DB.connected>)
    src.sysmessage Erro. O item nao foi colocado a venda.
    return 0
endif

//create npc vendorbox if doesnt exist
//!!ATENÇÃO!! Qualquer item jogado na layer_vendor_extra de um NPC some na hora. A única segura é a layer_bankbox.
REF1=<findlayer.layer_bankbox>
if !<REF1>
    SERV.NEWITEM i_bankbox
	NEW.cont=<uid>
    NEW.layer=layer_bankbox
    REF1=<NEW>
endif

//remove from players bag and place it inside a new bag in the vendor bankbox
//this prevents stacking items
SERV.NEWITEM i_bag
NEW.cont=<REF1>
NEW.name=<REF2.name>
REF2.cont=<NEW>
REF2.events +t_neverDie
REF2.removefromview
REF2.TRIGGER @Sell

//insert item into DB
DB.EXECUTE "INSERT INTO vendorItems SET timestamp=NOW(),idVendor=<eval <uid>>,idPlayer=<eval <uid>>,idItem=<eval <REF2>>,quantity=<eval <REF2.amount>>,price=(<eval <argv[1]>>/<eval <REF2.amount>>),playerName='<DB.ESCAPEDATA <name>>',itemType=<eval <TAG.vendor_type>>,defName='<REF2.baseid>',itemName='<DB.ESCAPEDATA <REF2.name>>';"
return 1

//*****************************************************************************
// vendor_sellItem( item, preco TOTAL, quantidade )
//*****************************************************************************
//coloca um item a venda no vendedor
//preco deve ser na menor moeda de menor valor, neste caso o cobre.
//
//SRC deve ser o player vendedor

[FUNCTION vendor_sellItem]
OBJ=<argv[0]>
REF1=<SRC.CTAG0.vendor_selectedNpc>

if !(<DB.connected>)
    src.sysmessage Erro. O item nao foi colocado a venda.
    return 0
endif

//nao verifica limites se for venda do reino
if <SRC.CTAG0.vendor_op>==1
    if !<SRC.isgm>
        DB.QUERY "SELECT COUNT(id) AS CNT FROM vendorItems WHERE idPlayer=<eval <SRC>> AND defName='<OBJ.baseid>'"
        if <DB.ROW.0.CNT> >= <DEF.vendor_itemsPerId>
            src.sysmessageyellow Voce nao pode colocar o item a venda.
            src.sysmessageyellow O limite e de <eval <DEF.vendor_itemsPerId>> items do mesmo tipo.
            return 0
        endif
    endif
    OBJ.tag.guildItem=
else
    OBJ.tag.guildItem=1
endif

//acerta quantidade desejada
if ( <argv[2]> > <OBJ.amount> )
    LOCAL.amount = <OBJ.amount>
else
    LOCAL.amount = <argv[2]>
endif

OBJ=<splitStack <OBJ>,<LOCAL.amount>>

//create player vendorbox if doesnt exist
REF2=<src.findlayer.layer_vendor_extra>
if !<REF2>
    SERV.NEWITEM i_bankbox
    NEW.layer=layer_vendor_extra
    NEW.cont=<SRC>
    REF2=<NEW>
endif

//remove from players bag and place it inside a new bag in the vendor bankbox
//this prevents stacking items
SERV.NEWITEM i_bag
NEW.cont=<REF2>
NEW.name=<OBJ.name>
OBJ.cont=<NEW>
OBJ.events +t_neverDie
OBJ.removefromview
OBJ.TRIGGER @Sell

//insert item into DB
DB.EXECUTE "INSERT INTO vendorItems SET timestamp=NOW(),idVendor=<eval <REF1>>,idPlayer=<eval <SRC>>,idItem=<eval <OBJ>>,quantity=<eval <OBJ.amount>>,price=(<eval <argv[1]>>/<eval <OBJ.amount>>),playerName='<DB.ESCAPEDATA <SRC.TAG.name>>',itemType=<eval <REF1.TAG.vendor_type>>,defName='<OBJ.baseid>',itemName='<DB.ESCAPEDATA <OBJ.name>>';"

DB.QUERY "SELECT id FROM vendorItems WHERE idItem=<eval <OBJ>>"
if (!<DB.ROW.NUMROWS>)
    SERV.LOG VENDOR: ERRO AO VENDER ITEM!!! I:<OBJ> N:<OBJ.name> S:<SRC>
    //devolve item
    OBJ.cont=<SRC>
    NEW.remove
    REF1.SAY Estou tendo problemas, fique com seu item.
    SRC.UPDATE
    return 1
endif

trysrc <src> OBJ.TRIGGER @Sell,<DEF.TAT_AS_ARGO>,<REF1>

SRC.UPDATE

IF (!<IsGM>)
    REF1.SAY Obrigado. Seu produto esta a venda.
ENDIF

return 1

//*****************************************************************************
// vendor_buyItem( item, preco UNITARIO, quantidade )
//*****************************************************************************
//preco deve ser na menor moeda de menor valor, neste caso o cobre.
//
//SRC deve ser o player comprador

[FUNCTION vendor_buyItem]
OBJ=<argv[0]>

if !(<DB.connected>)
    SRC.sysmessage Erro. O item nao foi comprado.
    return 1
endif

REF1=<SRC.CTAG0.vendor_selectedNpc>

//pega detalhes do item
DB.QUERY "SELECT id, timestamp, idVendor, idPlayer, playerName, itemType FROM vendorItems WHERE idItem=<eval <OBJ>>"
LOCAL.id    = <DB.ROW.id>
LOCAL.timestamp = <DB.ROW.timestamp>
LOCAL.idVendor  = <DB.ROW.idVendor>
LOCAL.idPlayer  = <DB.ROW.idPlayer>
LOCAL.itemType  = <DB.ROW.itemType>
LOCAL.playerName = <DB.ROW.playerName>

if !<LOCAL.id>
    REF1.SAY Me desculpe, mas o que gostaria nao esta mais disponivel.
    return 1
endif

//acerta quantidade desejada
if ( <argv[2]> > <OBJ.amount> )
    LOCAL.amount = <OBJ.amount>
else
    LOCAL.amount = <argv[2]>
endif

//calcula peso do que sera retirado
LOCAL.weight=<eval (<LOCAL.amount>*<OBJ.weight>)/<OBJ.amount>>

if (<LOCAL.weight> > <eval <SRC.maxweight>-<SRC.weight>>) && (!<IsGM>)
    REF1.SAY Voce nao tem como carregar isto. Esvazie sua mochila...
    return 1
endif

//verifica se comprador tem dinheiro suficiente e recolhe
LOCAL.totalPrice=<vendor_calcTotalPrice <argv1>,<LOCAL.amount>>

if !( <vendor_getCash <LOCAL.totalPrice>> ) && (!<IsGM>)
    REF1.SAY Esta achando que vivo de caridade? Volte quando tiver dinheiro suficiente para a compra.
    return 1
endif

//PROVISORIO, ENQUANTO NAO DESCOBRIR PQ DO DUPEITEM ESTAR REMOVENDO
OBJ.events +t_neverDie
REF3=<splitStack <OBJ>,<LOCAL.amount>>

//salva bag de 'protecao'
REF2=<OBJ.cont>

//entrega item ao player comprador
REF3.bounce
REF3.events -t_neverDie

REF3.TRIGGER @Buy,<DEF.TAT_AS_ARGO>,<REF1>

//se teve que dividir a pilha
if ( <OBJ> != <REF3> )

    //atualiza lista de vendas
    DB.EXECUTE "UPDATE vendorItems SET idItem=<eval <OBJ>>, quantity=<eval <OBJ.amount>> WHERE id=<eval <LOCAL.id>>"

else
    //se bag de protecao foi pro comprador (assumindo comprador diferente do vendedor)
    if (<REF2.topobj>==<src>) && (<src>!=<LOCAL.idPlayer>)
        serv.log [VENDAS] ERRO AO REMOVER BAG: <argv0>/<OBJ>/<src>/<LOCAL.totalPrice>
        src.sysmessageyellow [VENDAS] ERRO: <argv0>/<OBJ>/<src>/<LOCAL.totalPrice>. Avise a staff.
        return 1
    endif

    if <REF2.baseid> == i_bag
        //remove bag de 'protecao'
        REF2.remove
    else
        serv.log [VENDAS] ERRO AO REMOVER BAG B: <argv0>/<OBJ>/<src>/<LOCAL.totalPrice>
    endif
    
    //remove item da lista de vendas (e duplicatas caso haja... nunca se sabe)
    DB.EXECUTE "DELETE FROM vendorItems WHERE id=<eval <LOCAL.id>>"
endif

if ( <LOCAL.totalPrice> >= vendor_minFeePrice )
    LOCAL.fee=<eval (<LOCAL.totalPrice>*vendor_fee)/100>
    if ( <LOCAL.fee>==0 )
        LOCAL.fee=1
    endif
    LOCAL.paycheck=<eval <LOCAL.totalPrice>-<LOCAL.fee>>
else
    LOCAL.paycheck=<LOCAL.totalPrice>
endif

//Adiciona o imposto no tesouro da town
REF1.TOWN_ADDCASH <LOCAL.fee>

IF (!<IsGM>)
    REF1.SAY Obrigado pela compra e volte sempre!
ENDIF

//se for item do npc
if <LOCAL.idVendor>==<LOCAL.idPlayer>
    REF1.TOWN_ADDCASH <LOCAL.paycheck>
//se for item da guilda mercante e NPC em uma town
elif (<OBJ.tag0.guildItem>) && (<REF1.region.tag0.town_type>)
    f_sendMessage <LOCAL.idPlayer>,Voce vendeu <eval <LOCAL.amount>> <OBJ.name> por <eval <LOCAL.totalPrice>>.O reino agradece.,SM_GREEN
    REF1.TOWN_ADDCASH <LOCAL.paycheck>
    OBJ.tag0.guildItem=
else
    //transfere o dinheiro para o banco do player vendedor
    SERV.newitem i_coin_copper
    NEW.amount=<LOCAL.paycheck>
    NEW.cont=<uid.<LOCAL.idPlayer>.findlayer.layer_bankbox>

    f_sendMessage <LOCAL.idPlayer>,Voce vendeu <eval <LOCAL.amount>> <OBJ.name> por <eval <LOCAL.totalPrice>>. <eval <LOCAL.paycheck>> esta no banco.,SM_GREEN
endif

//insere na lista de trocas
if (<strpos 0 . <argv[1]>> > 0)
    DB.EXECUTE "INSERT INTO tradeItems SET postDate='<LOCAL.timestamp>',sellDate=NOW(),idVendor=<eval <LOCAL.idVendor>>,idPlayerVendor=<eval <LOCAL.idPlayer>>,idPlayerBuyer=<eval <SRC.uid>>,playerVendorName='<DB.ESCAPEDATA <LOCAL.playerName>>',playerBuyerName='<DB.ESCAPEDATA <SRC.TAG.name>>',idItem=<eval <OBJ>>,quantity=<eval <LOCAL.amount>>,price=<argv[1]>,itemType='<LOCAL.itemType>', itemName='<DB.ESCAPEDATA <OBJ.name>>',defName='<OBJ.baseid>'"
else
    DB.EXECUTE "INSERT INTO tradeItems SET postDate='<LOCAL.timestamp>',sellDate=NOW(),idVendor=<eval <LOCAL.idVendor>>,idPlayerVendor=<eval <LOCAL.idPlayer>>,idPlayerBuyer=<eval <SRC.uid>>,playerVendorName='<DB.ESCAPEDATA <LOCAL.playerName>>',playerBuyerName='<DB.ESCAPEDATA <SRC.TAG.name>>',idItem=<eval <OBJ>>,quantity=<eval <LOCAL.amount>>,price=<eval <argv[1]>>,itemType='<LOCAL.itemType>', itemName='<DB.ESCAPEDATA <OBJ.name>>',defName='<OBJ.baseid>'"
endif


return 1

//*****************************************************************************
// vendor_takebackItem( item, destination,[idInDb] )
//*****************************************************************************
//SRC deve ser o player comprador

[FUNCTION vendor_takebackItem]
OBJ=<argv0>

if !(<DB.connected>)
    SRC.sysmessage Erro. O item nao foi retornado.
    return 1
endif

if !<argv2>
    //pega detalhes do item
    DB.QUERY "SELECT id, timestamp, idVendor, idPlayer, playerName, itemType FROM vendorItems WHERE idItem=<eval <OBJ>>"
    LOCAL.id    = <DB.ROW.id>
else
    LOCAL.id    = <argv2>
endif

//remove item da lista de vendas (e duplicatas caso haja... nunca se sabe)
DB.EXECUTE "DELETE FROM vendorItems WHERE id=<eval <LOCAL.id>>"

//salva bag de 'protecao'
REF1=<OBJ.cont>

OBJ.events -t_neverDie

//destino, pode ser char (vai pra backpack), container (dentro) ou outro item (mesma posicao)
REF2=<argv1>

OBJ.sfx 87
OBJ.tag.guildItem=

if !<REF2>
    serv.log [VENDAS][takeback] Destino <argv1> nao encontrado. Removendo <OBJ> (<OBJ.name>)
    OBJ.remove
//entrega item ao player ou põe no container
elif <REF2.isChar>
    OBJ.cont=<REF2.findlayer.layer_pack>
    TRYSRC <REF2> OBJ.TRIGGER @Buy
elif <REF2.isCont>
    OBJ.cont=<REF2>
else
    OBJ.p=<REF2.p>
endif

//remove bag de 'protecao'
if <REF1.baseid>==i_bag
    REF1.remove
else
    serv.log [VENDAS][takeback] Erro, bag invalida: <REF1> (<REF1.name>)
endif

return 1

//*****************************************************************************
// f_getItemQuality( item, type )
//*****************************************************************************
//retorna um inteiro com a qualidade do item
[FUNCTION f_getItemQuality]

LOCAL.obj=<OBJ>
OBJ=<argv[0]>

if ( <argv[1]>==vendor_type_weapons )
    LOCAL.quality=<eval <OBJ.hitpoints> + <OBJ.dam> >
elif ( <argv[1]>==vendor_type_armor )
    LOCAL.quality=<eval <OBJ.hitpoints> + <OBJ.armor> >
elif ( <argv[1]>==vendor_type_magic )
    if ( <OBJ.type>==t_potion )
        LOCAL.quality=<OBJ.more2>
    elif ( <OBJ.type>==t_wand )
        LOCAL.quality=<eval <OBJ.hitpoints> + <OBJ.MORE2> > //hits+charges
    else
        LOCAL.quality=0
    endif
elif ( <argv[1]>==vendor_type_food )
    LOCAL.quality=<OBJ.MORE2> //colocar nos itens t_food a quantidade no MORE2
elif ( <argv[1]>==vendor_type_misc )
//  LOCAL.quality=<OBJ.MORE2> //colocar nos itens crafted o skill do fabricante no MORE2
    LOCAL.quality=0
elif ( <argv[1]>==vendor_type_clothes )
//  LOCAL.quality=<OBJ.MORE2> //colocar nos itens tailored o skill do fabricante no MORE2
    LOCAL.quality=0
elif ( <argv[1]>==vendor_type_raw )
    LOCAL.quality=0
endif

OBJ=<LOCAL.obj>

return <LOCAL.quality>

//*****************************************************************************
// vendor_addNpc( itemType, npcId )
//*****************************************************************************
//use sem parametros para abrir o menu de configuracao
[FUNCTION vendor_addNpc]
if (<eval <argv[0]>> == 0) || (<eval <argv[1]>> == 0)
    menu m_vendor_npcType
    return 1
else
    SRC.targetfg vendor_placeNpc <argv[0]>,<argv[1]>
    SRC.sysmessage Onde deseja colocar o vendedor?
endif
return 1

//*****************************************************************************
// vendor_placeNpc( itemType, npcId )
//*****************************************************************************
//argo = target
//argv[0] = itemType
[FUNCTION vendor_placeNpc]
SERV.NEWNPC=<argv[1]>
NEW.FLAGS 04
NEW.P=<TARGP>
NEW.FIX
NEW.TAG.vendor_type=<argv[0]>

if ( <argv[0]>==vendor_type_weapons )
    NEW.TITLE = Vendedor de Armas
elif ( <argv[0]>==vendor_type_armor )
    NEW.TITLE = Vendedor de Armaduras
elif ( <argv[0]>==vendor_type_magic )
    NEW.TITLE = Vendedor de Pocoes e Reags
elif ( <argv[0]>==vendor_type_food )
    NEW.TITLE = Vendedor de Alimentos
elif ( <argv[0]>==vendor_type_misc )
    NEW.TITLE = Vendedor
elif ( <argv[0]>==vendor_type_clothes )
    NEW.TITLE = Vendedor de Roupas e Joias
elif ( <argv[0]>==vendor_type_raw )
    NEW.TITLE = Vendedor de Materia Prima
endif

//forca criacao de uma bankbox no NPC para armazenar os itens de venda
OBJ=<NEW>
OBJ.NEWITEM i_bankbox
NEW.cont=<OBJ>

return 1

//*****************************************************************************
// vendor_removeVendor( npcId )
//*****************************************************************************
//remove dados do vendedor do banco
[FUNCTION vendor_removeVendor]
if ( <DB.connected> )
    SERV.LOG VENDAS: NPC LIMPO!!! <uid> <name>
    DB.EXECUTE "UPDATE vendorItems SET idVendor=0 WHERE idVendor=<eval <argv[0]>>"
endif
return 1

//*****************************************************************************
// vendor_getCash( amount )
//*****************************************************************************
//amount of cash (in copper)
//SRC is the player
[FUNCTION vendor_getCash]

LOCAL.copper=<SRC.rescount i_coin_copper>
LOCAL.silver=<SRC.rescount i_coin_silver>
LOCAL.gold=<SRC.rescount i_gold>
LOCAL.cash=<LOCAL.copper>+(<LOCAL.silver>*10)+(<LOCAL.gold>*100)

//message Needed: <argv[0]>
//message Total Cash: <eval <LOCAL.cash>> <LOCAL.copper> <LOCAL.silver> <LOCAL.gold>

if ( <LOCAL.cash> >= <argv[0]> )
    LOCAL.cash=<argv[0]>
//  sysmessage *********************
    
    if ( <LOCAL.cash> > <LOCAL.copper> )
        SRC.consume <LOCAL.copper> i_coin_copper
        LOCAL.cash=<LOCAL.cash>-<LOCAL.copper>
//      sysmessage Pago em cobre <eval <LOCAL.copper>>. Sobra <eval <LOCAL.cash>>.
    else
        SRC.consume <LOCAL.cash> i_coin_copper
//      sysmessage Pago em cobre <eval <LOCAL.cash>>
        return 1    
    endif

    LOCAL.v=<LOCAL.silver>*10
    if ( <LOCAL.cash> > <LOCAL.v> )
        SRC.consume <LOCAL.silver> i_coin_silver
        LOCAL.cash=<LOCAL.cash>-<LOCAL.v>
//      sysmessage Pago em prata <eval <LOCAL.silver>>. Sobra <eval <LOCAL.cash>>.
    else
        LOCAL.amt=((<LOCAL.cash>-1)/10)+1
        SRC.consume <LOCAL.amt> i_coin_silver
        LOCAL.pb=(<LOCAL.amt>*10)-<LOCAL.cash>
        if (<LOCAL.pb> > 0)
            SRC.NEWITEM i_coin_copper
            NEW.amount=<LOCAL.pb>
            NEW.bounce
        endif
//      sysmessage Pago em prata <eval <LOCAL.amt>>. Troco <eval <LOCAL.pb>>.
        return 1    
    endif
    
    LOCAL.v=<LOCAL.gold>*100
    LOCAL.amt=((<LOCAL.cash>-1)/100)+1
    SRC.consume <LOCAL.amt> i_gold
    LOCAL.pb=(<LOCAL.amt>*100)-<LOCAL.cash>
    if (<LOCAL.pb> > 0)
        SRC.NEWITEM i_coin_copper
        NEW.amount=<LOCAL.pb>
        NEW.bounce
    endif
//  sysmessage Pago em ouro <eval <LOCAL.amt>>. Troco <eval <LOCAL.pb>>.
    return 1    

else
//  sysmessage cant buy
    return 0
endif

//*****************************************************************************
// vendor_cashFormat( amount, type )
//*****************************************************************************
//amount of cash (decimal)
//type of cash (1=copper,2=silver,3=gold,4=kgold,5=kkgold)
[FUNCTION vendor_cashFormat]
if ( !<argv[0]> || !<argv[1]> )
    sysmessage Utilize vendor_cashFormat amount,type
    return 1
endif

//serv.log Tentando <argv[0]>/<argv[1]>

if ( <argv[1]> <= 2 )
    LOCAL.x=<argv[0]>/10
    LOCAL.y=<LOCAL.x>*10
else
    LOCAL.x=<argv[0]>/1000
    LOCAL.y=<LOCAL.x>*1000
endif

if ( <eval <LOCAL.y>>!=<argv[0]> ) || ( <argv[1]>==5 )
//  serv.log Nao da para reduzir mais que <argv[0]> <LOCAL.y>

    if ( <argv[1]>==1 )
        return <formatDecimal <argv[0]>> mc
    elif ( <argv[1]>==2 )
        return <formatDecimal <argv[0]>> mp
    elif ( <argv[1]>==3 )
        return <formatDecimal <argv[0]>> mo
    elif ( <argv[1]>==4 )
        return <formatDecimal <argv[0]>>k mo
    elif ( <argv[1]>==5 )
        return <formatDecimal <argv[0]>>kk mo
    else
        return Error!
    endif
else
    return <vendor_cashFormat <eval <LOCAL.x>>,<eval <argv[1]>+1>>
endif

//*****************************************************************************
// vendor_buySellTrigger <new_session_npc>
//*****************************************************************************
//trigger a buy or sell action (choose using SRC.CTAG0.vendor_op)
[FUNCTION vendor_buySellTrigger]

//if !<src.isgm>
//    src.sysmessageyellow Sistema em manutencao, desculpem o transtorno.
//    return
//endif

if <argn>
    SRC.CTAG.vendor_selectedNpc=<argn>
    SRC.CTAG.vendor_lastListPage=1
    SRC.CTAG.vendor_lastCatPage=1
endif

REF1=<SRC.CTAG0.vendor_selectedNpc>

dialogclose d_vendor_categories
dialogclose d_vendor_list
dialogclose d_vendor_item_detail

if ( <SRC.CTAG0.vendor_op>==1 ) || ( <SRC.CTAG0.vendor_op>==4 )

    //checa permissões de Town
    if !(<ref1.region.tag0.permissions>&<DEF.TOWN_CAN_SELL>) && !(<src.ctag0.town_<region.defname>_privs>&<DEF.TOWN_PRIV_MARKET>)
        REF1.say Desculpe mas, as leis de <ref1.region.name> nao permitem que eu compre de voce.
        return 0
    endif

    vendor_createPlayerList
    if ( <SRC.CTAG0.vendor_numItems> < 1 )
        REF1.message Voce nao tem nada que eu possa vender.
    else
        REF1.message O que deseja vender?
        vendor_openDialogOnPage d_vendor_list,<src.ctag.vendor_lastListPage>
    endif
elif ( <SRC.CTAG0.vendor_op>==2 )

    //checa permissões de Town
    if !(<ref1.region.tag0.permissions>&<DEF.TOWN_CAN_BUY>) && !(<src.ctag0.town_<region.defname>_privs>&<DEF.TOWN_PRIV_MARKET>)
        REF1.say Desculpe mas, as leis de <ref1.region.name> nao permitem que eu venda para voce.
        return 0
    endif

    //abre categorias somente no inicio, as proximas vezes continua com a lista que estava aberta
    if !<argn>
        vendor_createVendorSubList <SRC.CTAG.vendor_selectedFilter>
        if <SRC.CTAG0.vendor_numItems> > 0 
            vendor_openDialogOnPage d_vendor_list,<src.ctag.vendor_lastListPage>
            return
        endif
    endif

    vendor_createVendorMasterList
    if ( <SRC.CTAG0.vendor_numItems> < 1 )
        REF1.message Nao tenho nada para vender no momento.
    else
        REF1.message O que deseja comprar?
        vendor_openDialogOnPage d_vendor_categories,<src.ctag.vendor_lastCatPage>
    endif
elif ( <SRC.CTAG0.vendor_op>==3 )
    vendor_createTakebackList
    if ( <SRC.CTAG0.vendor_numItems> < 1 )
        REF1.message Nao tenho nada seu para devolver
    else
        REF1.message O que deseja retirar?
        vendor_openDialogOnPage d_vendor_list,<src.ctag.vendor_lastListPage>
    endif
endif


//*****************************************************************************
// vendor_matchItemType( type, uidItem )
//*****************************************************************************
[FUNCTION vendor_matchItemType]
if ( <argv0>==vendor_type_weapons)
    if ( <f_isWeapon <argv1>> )
        return 1
    endif
    return 0
elif ( <argv0>==vendor_type_armor )
    if ( <f_isArmor <argv1>> )
        return 1
    endif
    return 0
elif ( <argv0>==vendor_type_magic )
    if ( <f_isRegsOrMagic <argv1>> )
        return 1
    endif
    return 0
elif ( <argv0>==vendor_type_food )
    if ( <f_isFood <argv1>> )
        return 1
    endif
    return 0
elif ( <argv0>==vendor_type_misc )
    if ( <f_isMisc <argv1>> )
        return 1
    endif
    return 0
elif ( <argv0>==vendor_type_clothes )
    if ( <f_isWearable <argv1>> )
        return 1
    endif
    return 0
elif ( <argv0>==vendor_type_raw )
    if ( <f_isRaw <argv1>> )
        return 1
    endif
    return 0
endif
return 0

//*****************************************************************************
// vendor_fix
//*****************************************************************************
//remove invalid itens
[FUNCTION vendor_fix]

LOCAL.i=0
LOCAL.p=0

//varre o banco
if ( <DB.connected> )
    DB.QUERY "SELECT idItem, idPlayer FROM vendorItems"
    if (<DB.ROW.NUMROWS> > 0)
        for R 0 <eval <DB.ROW.NUMROWS>-1>
            REF1=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
            REF2=<DB.ROW.<eval <LOCAL.R>>.idItem>
            if (!<REF1>)
                LOCAL.r=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
                if (!<LOCAL.p>)
                    LOCAL.rp=<dLOCAL.r>
                else
                    LOCAL.rp=<dLOCAL.rp>,<dLOCAL.r>
                endif
                LOCAL.p += 1
                serv.log [VENDOR] INVALID PLAYER: <LOCAL.r>
            elif (!<REF2>)
                LOCAL.r=<DB.ROW.<eval <LOCAL.R>>.idItem>
                if (!<LOCAL.i>)
                    LOCAL.ri=<dLOCAL.r>
                else
                    LOCAL.ri=<dLOCAL.ri>,<dLOCAL.r>
                endif
                LOCAL.i += 1
                serv.log [VENDOR] INVALID ITEM: <LOCAL.r>
            endif
        end
    endif
endif
serv.log [VENDOR] - <eval <DB.ROW.NUMROWS>> itens scanned

if (<LOCAL.p>)
    DB.EXECUTE "DELETE FROM vendorItems WHERE idPlayer IN (<LOCAL.rp>)"
endif

if (<LOCAL.i>)
    DB.EXECUTE "DELETE FROM vendorItems WHERE idItem IN (<LOCAL.ri>)"
endif

serv.log [VENDOR] - <LOCAL.p> players removed, <LOCAL.i> itens removed.

//*****************************************************************************
// vendor_cleanup
//*****************************************************************************
//remove expired itens
[FUNCTION vendor_cleanup]

LOCAL.i=0
LOCAL.p=0
LOCAL.b=0

//varre o banco
if ( <DB.connected> )
    DB.QUERY "SELECT id, timestamp, idItem, idPlayer FROM vendorItems WHERE timestamp < NOW() - INTERVAL <DEF.vendor_weeksToExpire> WEEK order by timestamp"
    if (<DB.ROW.NUMROWS> > 0)
        for R 0 <eval <DB.ROW.NUMROWS>-1>
            REF3=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
            REF2=<DB.ROW.<eval <LOCAL.R>>.idItem>
            if (!<REF3>)
                LOCAL.r=<DB.ROW.<eval <LOCAL.R>>.idPlayer>
                if (!<LOCAL.p>)
                    LOCAL.rp=<dLOCAL.r>
                else
                    LOCAL.rp=<dLOCAL.rp>,<dLOCAL.r>
                endif
                LOCAL.p += 1
                serv.log [VENDOR] INVALID PLAYER: <LOCAL.r>
            elif (!<REF2>)
                LOCAL.r=<DB.ROW.<eval <LOCAL.R>>.idItem>
                if (!<LOCAL.i>)
                    LOCAL.ri=<dLOCAL.r>
                else
                    LOCAL.ri=<dLOCAL.ri>,<dLOCAL.r>
                endif
                LOCAL.i += 1
                serv.log [VENDOR] INVALID ITEM: <LOCAL.r>
            else
                LOCAL.b += 1
                vendor_takebackItem <REF2>,<REF3>,<DB.ROW.<eval <LOCAL.R>>.id>
                f_sendMessage <REF3>,A venda do seguinte item expirou: <REF2.name>,SM_YELLOW
                serv.log [VENDOR] EXPIRED ITEM: <REF2> do <REF3> com data <DB.ROW.<eval <LOCAL.R>>.timestamp>
            endif
        end
    endif
endif
serv.log [VENDOR] - <eval <DB.ROW.NUMROWS>> itens scanned

if (<LOCAL.p>)
    DB.EXECUTE "DELETE FROM vendorItems WHERE idPlayer IN (<LOCAL.rp>)"
endif

if (<LOCAL.i>)
    DB.EXECUTE "DELETE FROM vendorItems WHERE idItem IN (<LOCAL.ri>)"
endif

serv.log [VENDOR] - <dLOCAL.p> players removed, <dLOCAL.i> itens removed, <dLOCAL.b> returned.

//*****************************************************************************
// openVendorBox
//*****************************************************************************
[FUNCTION openVendorBox]
findlayer.layer_vendor_extra.open

//*****************************************************************************
// vendor_addVendorQuest
//*****************************************************************************
[FUNCTION vendor_addVendorQuest]
if !<TAG0.vendor_type>
    src.sysmessageyellow Nao eh um vendedor...
    return
endif

dspeech +jobQUEST_SYSTEM
events +e_quest_npc

LOCAL.d=<TAG0.vendor_type>
if ( <LOCAL.d>==vendor_type_weapons )
    LOCAL.name=Fornecimento de Armas
    LOCAL.desc=Forneca armas
elif ( <LOCAL.d>==vendor_type_armor )
    LOCAL.name=Fornecimento de Armaduras
    LOCAL.desc=Forneca armaduras
elif ( <LOCAL.d>==vendor_type_magic )
    LOCAL.name=Fornecimento de Pocoes e Reagentes
    LOCAL.desc=Forneca pocoes e reagentes
elif ( <LOCAL.d>==vendor_type_food )
    LOCAL.name=Fornecimento de Alimentos
    LOCAL.desc=Forneca alimentos
elif ( <LOCAL.d>==vendor_type_misc )
    LOCAL.name=Fornecimento
    LOCAL.desc=Forneca produtos como x,y e z
elif ( <LOCAL.d>==vendor_type_clothes )
    LOCAL.name=Fornecimento de Roupas e Joias
    LOCAL.desc=Forneca roupas e joias
elif ( <LOCAL.d>==vendor_type_raw )
    LOCAL.name=Fornecimento de Materia Prima
    LOCAL.desc=Forneca materia prima
else
    src.sysmessageyellow Tipo de vendedor desconhecido...
    return
endif

DB.EXECUTE "INSERT INTO quests SET idNpc=<eval <uid>>, name='<LOCAL.name>', description='<LOCAL.desc>', mayRepeat=1"
DB.QUERY "SELECT MAX(idQuest) as idQuest FROM quests WHERE idNpc=<eval <uid>>"
if (<DB.ROW.NUMROWS> == 0)
    src.sysmessageyellow Erro criando quest...
    return
endif    
LOCAL.idQuest=<DB.ROW.0.idQuest>
DB.EXECUTE "INSERT INTO questSteps SET idQuest=<eval <LOCAL.idQuest>>, idStep=0,type=<eval <DEF.quest_type_custom>>,param1='i_quest_vendor_deeds',description='<LOCAL.desc>',param2='00'"
serv.log [QUEST-VENDOR] (<src.account>) Criada: <LOCAL.name>: <LOCAL.desc>

src.sysmessageyellow Criado com sucesso

//*****************************************************************************
// vendor_bt_takeback
//*****************************************************************************
//botao para estornar um item
[FUNCTION vendor_bt_takeback]
if <src.has_merchant_priv> && (<SRC.CTAG0.vendor_op>==2)
    vendor_takebackItem <SRC.CTAG.vendor_selectedItem>,<SRC.CTAG.vendor_selectedOwner>
    src.sysmessagegreen Item devolvido ao player.
    f_sendMessage <SRC.CTAG.vendor_selectedOwner>,O seguinte item foi retirado da venda e devolvido: <uid.<SRC.CTAG.vendor_selectedItem>.name>,SM_YELLOW
endif

//*****************************************************************************
// vendor_bt_remove
//*****************************************************************************
//botao para remover um item
[FUNCTION vendor_bt_remove]
if <src.has_merchant_priv> && (<SRC.CTAG0.vendor_op>==2)
    if (<src.isgm>)
        vendor_takebackItem <SRC.CTAG.vendor_selectedItem>,<SRC>
    else
        local.vault=<src.town_GetVault>
        if (<local.vault>)
                vendor_takebackItem <SRC.CTAG.vendor_selectedItem>,<local.vault>
                src.sysmessagegreen Item encaminhado para o cofre de <src.region.name>.
        else
                vendor_takebackItem <SRC.CTAG.vendor_selectedItem>,<SRC>
                uid.<SRC.CTAG.vendor_selectedItem>.remove
                src.sysmessagegreen Item removido. Nao ha cofre em <src.region.name>.
        endif
    endif
    f_sendMessage <SRC.CTAG.vendor_selectedOwner>,O seguinte item foi confiscado da venda: <uid.<SRC.CTAG.vendor_selectedItem>.name>,SM_YELLOW
endif

//*****************************************************************************
// vendor_info_callback
//*****************************************************************************
//funcao de callback do sistema de informacoes pra chamar gump de compra/venda
[FUNCTION vendor_info_callback]

SRC.CTAG.vendor_selectedItem=<uid>

//verifica se o item esta no banco
DB.QUERY "SELECT idPlayer,price  FROM vendorItems WHERE idVendor=<eval <SRC.CTAG.vendor_selectedNpc>> AND idItem=<eval <uid>> LIMIT 1"

if <DB.ROW.NUMROWS> > 0
    SRC.CTAG.vendor_selectedPrice=<DB.ROW.0.price>
    SRC.CTAG.vendor_selectedOwner=<DB.ROW.0.idPlayer>
//compra/venda de mim mesmo?
elif <topobj>==<src>
    SRC.CTAG.vendor_selectedPrice=0
    SRC.CTAG.vendor_selectedOwner=<src>
else
    src.sysmessagered Erro, item nao disponivel! 
    return
endif

//buy/sell
if <argn>==1
    src.dialogclose d_vendor_item_detail
    src.dialog d_vendor_item_detail
//takeback
elif <argn>==2
    vendor_bt_takeback
    vendor_buySellTrigger
//remove
elif <argn>==3
    vendor_bt_remove
    vendor_buySellTrigger
else
    src.sysmessagered Erro 1!
endif

//*****************************************************************************
// vendor_openDialogOnPage [<pagina>]
//*****************************************************************************
//abre um dos dialogs de venda numa determinada pagina
[FUNCTION vendor_openDialogOnPage]
if 0<argv1> > <SRC.CTAG0.vendor_numPages>
    SRC.CTAG0.vendor_page=<SRC.CTAG0.vendor_numPages>
elif 0<argv1>
    SRC.CTAG0.vendor_page=<argv1>
endif

if <SRC.CTAG.vendor_page> < 1
    SRC.CTAG.vendor_page=1
elif <SRC.CTAG.vendor_page> > <SRC.CTAG0.vendor_numPages>
    SRC.CTAG.vendor_page=<SRC.CTAG0.vendor_numPages>
endif

dialog <argv0>


//*****************************************************************************
//*****************************************************************************
// TYPEDEFs
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// t_neverDie
//*****************************************************************************
//Event para o item nunca sofrer @Destroy
[TYPEDEF t_neverDie]
on=@Destroy
if <cont.baseid>==i_bag
    if <topobj.findlayer.layer_vendor_extra>==<cont.cont>
        serv.log [T_NEVERDIE] EVITOU ITEM SER REMOVIDO: <name> <uid>
        return 1
    endif
endif

serv.log [T_NEVERDIE] ITEM SENDO REMOVIDO POIS NAO ESTA NO MERCANTE: <name> <uid>

//*****************************************************************************
//*****************************************************************************
// DIALOGOS E MENUS
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// m_vendor_npcType
//*****************************************************************************
//menu de criacao do NPC vendedor. escolhao tipo
[MENU m_vendor_npcType]
                -=Criacao de Vendedor=-
on=0 Vendedor de Armas
    SRC.CTAG.vendor_newNpcType = <eval vendor_type_weapons> //t_weapon_axe,t_weapon_mace_smith,t_weapon_mace_sharp,t_weapon_sword,t_weapon_fence,t_weapon_bow,t_weapon_mace_staff,t_weapon_mace_crook,t_weapon_mace_pick,t_weapon_arrow,t_weapon_bolt,t_weapon_xbow
    menu m_vendor_npcGender
    return 1

on=0 Vendedor de Armaduras
    SRC.CTAG.vendor_newNpcType = <eval vendor_type_armor>   //t_armor,t_armor_leather,t_shield
    menu m_vendor_npcGender
    return 1

on=0 Vendedor de Reagentes e Itens Magicos  
    SRC.CTAG.vendor_newNpcType = <eval vendor_type_magic>   //t_wand, t_potion, t_reagent, t_reagent_raw, t_potion_empty
    menu m_vendor_npcGender
    return 1

on=0 Vendedor de Alimentos
    SRC.CTAG.vendor_newNpcType = <eval vendor_type_food>    //t_food, t_food_raw, t_fish, t_drink, t_fruit, t_meat_raw, t_pitcher
    menu m_vendor_npcGender
    return 1

on=0 Vendedor de Marcenaria e Tinker
    SRC.CTAG.vendor_newNpcType = <eval vendor_type_misc>    //t_clock, t_musical, t_carpentry, t_normal,t_sextant, t_table, t_scissors, t_fish_pole, t_shaft, t_sewing_kit, t_tinker_tools, t_mortar, t_cadeado, t_fechadura
    menu m_vendor_npcGender
    return 1

on=0 Vendedor de Roupas e Joias
    SRC.CTAG.vendor_newNpcType = <eval vendor_type_clothes> //t_clothing, t_cloth, t_jewelry
    menu m_vendor_npcGender
    return 1

on=0 Vendedor de Materia Prima
    SRC.CTAG.vendor_newNpcType = <eval vendor_type_raw> //t_log, t_ore, t_ingot, t_seed, t_leather, t_loom, t_feather, t_wool,t_fur, t_thread, t_yarn, t_cotton
    menu m_vendor_npcGender
    return 1

//*****************************************************************************
// m_vendor_npcGender
//*****************************************************************************
//menu de criacao do NPC vendedor. escolha a raca e sexo
[MENU m_vendor_npcGender]
                -=Criacao de Vendedor=-
on=0 Humano
    vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_H_VENDOR_M
    return 1

//on=0 Mulher - Humano
//  vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_H_VENDOR_M
//  return 1

on=0 Orc
    vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_O_VENDOR_M
    return 1

//on=0 Femea - Orc
//  vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_H_VENDOR_M
//  return 1

//on=0 Bambi - Elfo
//  vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_H_VENDOR_M
//  return 1

on=0 Elfo
    vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_E_VENDOR_F
    return 1

on=0 Anao
    vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_D_VENDOR_M
    return 1

//on=0 Barbuda - Anao
//  vendor_addNpc <SRC.CTAG.vendor_newNpcType>,C_H_VENDOR_M
//  return 1




//*****************************************************************************
// d_vendor_categories - lista tipos de itens de um NPC vendor
//*****************************************************************************
[DIALOG d_vendor_categories]
100,100
page 0

SRC.CTAG0.vendor_lastCatPage = <SRC.CTAG0.vendor_page>

LOCAL.startItem=<eval ((<SRC.CTAG0.vendor_page> - 1) * vendor_itemsPerPage ) + 1>
LOCAL.endItem=<eval (<SRC.CTAG0.vendor_page> * vendor_itemsPerPage)>

if ( <LOCAL.endItem> > <SRC.CTAG0.vendor_numItems> )
    LOCAL.endItem = <SRC.CTAG0.vendor_numItems>
endif 

LOCAL.pageLen=<eval 103+(<LOCAL.endItem>-<LOCAL.startItem>)*20>

resizepic 0 0 83 454 <LOCAL.pageLen>
dtext 12 9 37 Selecione o tipo:

dorigin 14 29
dtext *0 *0 0  
dtext +25 - 2100 Quant.
dtext +70 - 2100 Tipo.

for x  <LOCAL.startItem> <LOCAL.endItem> 
    //cria entrada no dialog
    button - *20 2117 2118 1 0 <eval (1000 + <LOCAL.x>)>
    dtext +25 -3 2100 <eval <SRC.CTAG0.vendor_subcnt<eval <LOCAL.x>>>>
    dtext +70 -3 2100 <SRC.CTAG0.vendor_subname<eval <LOCAL.x>>>
endfor

if (<SRC.CTAG0.vendor_page> > 1)
    // Back button
    button 12 <eval <LOCAL.pageLen>-30> 9766 9767 1 0 1
endif
if (<SRC.CTAG0.vendor_page> < <SRC.CTAG0.vendor_numPages>)
    // Forward button
    button 428 <eval <LOCAL.pageLen>-30> 9762 9703 1 0 2
endif
dtext 190 <eval <LOCAL.pageLen>-30> 2100 Pag <eval <SRC.CTAG0.vendor_page>> / <eval <SRC.CTAG0.vendor_numPages>>


[DIALOG d_vendor_categories button]
on=0
return 1

on=1 // Back button
SRC.CTAG0.vendor_page -= 1
vendor_openDialogOnPage d_vendor_categories

on=2 // Forward button
src.CTAG0.vendor_page += 1
vendor_openDialogOnPage d_vendor_categories

on=1001,65535 //itens buttons
vendor_createVendorSubList <SRC.CTAG0.vendor_subdef<eval <argn> - 1000>>
vendor_openDialogOnPage d_vendor_list,1


//*****************************************************************************
// d_vendor_list - 
//*****************************************************************************
//na compra, lista itens de um NPC vendor de acordo com a categoria
//na venda, lista os itens que um player pode vender
[DIALOG d_vendor_list]
100,100
page 0

if !<SRC.CTAG0.vendor_numItems>
    src.sysmessageyellow Erro! Nao ha itens!!
    vendor_buySellTrigger
    return 1
endif

LOCAL.startItem=<eval ((<SRC.CTAG0.vendor_page> - 1) * vendor_itemsPerPage ) + 1>
LOCAL.endItem=<eval (<SRC.CTAG0.vendor_page> * vendor_itemsPerPage)>

if ( <LOCAL.endItem> > <SRC.CTAG0.vendor_numItems> )
    LOCAL.endItem = <SRC.CTAG0.vendor_numItems>
endif 

LOCAL.pageLen=<eval 103+(<LOCAL.endItem>-<LOCAL.startItem>)*20>

resizepic 0 0 83 654 <LOCAL.pageLen>

doswitch <SRC.CTAG0.vendor_op>
    dtext 12 9 37 Erro com vendor_op!
    dtext 12 9 37 Selecione o que deseja vender:
    dtext 12 9 37 Selecione para ver mais detalhes:
    dtext 12 9 37 Selecione o que quer retirar:
    dtext 12 9 37 Selecione o que deseja vender pelo reino:
enddo

dorigin 14 29
dtext *0 *0 0  
dtext +45 - 2100 Quant.
dtext +90 - 2100 Nome.
if ( <SRC.CTAG0.vendor_op>!=1 ) && ( <SRC.CTAG0.vendor_op>!=4 )
    dtext +460 - 2100 Preco Un.
    dtext +530 - 2100 Vendedor
endif


for x  <LOCAL.startItem> <LOCAL.endItem> 

    OBJ=<SRC.CTAG0.vendor_owners<eval <LOCAL.x>>>
    if <OBJ.isplayer>
        LOCAL.vendor=<OBJ.TAG.name>
    else
        LOCAL.vendor=<OBJ.name>
    endif
    
    //carrega item armazenado
    OBJ=<SRC.CTAG0.vendor_items<eval <LOCAL.x>>>
    
    LOCAL.name=<OBJ.name>
    if ( <OBJ.attr>&attr_identified ) || <SRC.isgm>
        if (!<isempty <def.<OBJ.baseid>_IDNAME>>)   
            LOCAL.name=[i] <def.<OBJ.baseid>_IDNAME>
            
            if ( <OBJ.type>==t_potion )
                LOCAL.name=<LOCAL.name> [<OBJ.f_potionStr>]
            endif            
        else
            LOCAL.name=[i] <LOCAL.name>
        endif
    endif
    if (<OBJ.tag0.guildItem>)
        LOCAL.name=[r] <LOCAL.name>
    endif
    //cria entrada no dialog
    LOCAL.d=<eval <LOCAL.x>*2>
    button - *20 2117 2118 1 0 <eval (1000 + <LOCAL.d>)>
    button +21 -3 9011 9011 1 0 <eval (1001 + <LOCAL.d>)>
    dtext +45 -3 2100 <OBJ.amount>
    if ( <SRC.CTAG0.vendor_op>==1 ) ||  ( <SRC.CTAG0.vendor_op>==4 )
        dtext +90 -3 2100 <LOCAL.name>
    else
        dtext +90 -3 2100 <strsub 0 50 <LOCAL.name>>
        dtext +460 -3 2100 <vendor_cashFormat <SRC.CTAG0.vendor_prices<eval <LOCAL.x>>>,1>
        dtext +530 -3 2100 <LOCAL.vendor>
    endif
endfor

if (<SRC.CTAG0.vendor_page> > 1)
    // Back button
    button 12 <eval <LOCAL.pageLen>-30> 9766 9767 1 0 1
endif
if (<SRC.CTAG0.vendor_page> < <SRC.CTAG0.vendor_numPages>)
    // Forward button
    button 628 <eval <LOCAL.pageLen>-30> 9762 9703 1 0 2
endif
dtext 50 <eval <LOCAL.pageLen>-30> 2100 Taxa: <eval vendor_fee>%
dtext 290 <eval <LOCAL.pageLen>-30> 2100 Pag <eval <SRC.CTAG0.vendor_page>> / <eval <SRC.CTAG0.vendor_numPages>>
if (<SRC.CTAG0.vendor_op>==2)
    button 530 <eval <LOCAL.pageLen>-27> 2117 2118 1 0 3
    dtext 550 <eval <LOCAL.pageLen>-30> 2100 Voltar
endif

[DIALOG d_vendor_list button]
on=0
return 1

on=1 // Back button
SRC.CTAG0.vendor_page -= 1
vendor_openDialogOnPage d_vendor_list

on=2 // Forward button
src.CTAG0.vendor_page += 1
vendor_openDialogOnPage d_vendor_list

on=3 // Return to categories button
vendor_createVendorMasterList
vendor_openDialogOnPage d_vendor_categories,<SRC.CTAG0.vendor_lastCatPage>


on=1001,65535 //itens buttons
argn -= 1000
LOCAL.slot=<eval <argn>/2>
LOCAL.bt=<eval <argn>-(<LOCAL.slot>*2)>

//serv.log [VENDA] sl:<dLOCAL.slot> bt:<dLOCAL.bt>

SRC.CTAG.vendor_selectedItem=<SRC.CTAG0.vendor_items<dLOCAL.slot>>
SRC.CTAG.vendor_selectedPrice=<SRC.CTAG0.vendor_prices<dLOCAL.slot>>
SRC.CTAG.vendor_selectedOwner=<SRC.CTAG0.vendor_owners<dLOCAL.slot>>

//se compra/venda
if <LOCAL.bt>==0
    if (<SRC.CTAG0.vendor_op>==3)
        vendor_takebackItem <SRC.CTAG.vendor_selectedItem>,<src>
        REF1=<SRC.CTAG0.vendor_selectedNpc>
        IF (!<IsGM>)
            REF1.SAY Aqui esta, volte sempre.
        ENDIF
        vendor_buySellTrigger
    else
        dialog d_vendor_item_detail
    endif
//se info    
else
    vendor_openDialogOnPage d_vendor_list
    //venda
    if <SRC.CTAG0.vendor_op>==1
        src.analisar_ <SRC.CTAG.vendor_selectedItem>,01
    //compra
    else
        src.analisar_ <SRC.CTAG.vendor_selectedItem>,02
    endif
endif

//*****************************************************************************
// d_vendor_item_detail - mostra detalhes do item 
//*****************************************************************************
[DIALOG d_vendor_item_detail]
100, 100
PAGE 0
resizepic 0 0 83 320 150

OBJ=<SRC.CTAG.vendor_selectedItem>

//button 16 122 12015 12017 1 0 1
button 229 122 12000 12002 1 0 2

if ( <SRC.CTAG0.vendor_op>==1 ) || ( <SRC.CTAG0.vendor_op>==4 )
    dtext 14 12 37 Deseja vender <OBJ.name>?
    dtext 14 37 2100 Preco Total:
    gumppic 90 35 2443
    dtextentry 95 37 50 17 0 1 1

    group 0
    radio 164 37 210 211 1 1    //copper
    radio 184 37 210 211 0 2    //silver
    radio 204 37 210 211 0 3    //gold
    dtext 228 37 2100 (mc/mp/mo)
    
    dtext 14 60 2100 Vender
    gumppic 75 60 2443
    dtextentry 80 62 50 17 0 2 <OBJ.amount>
    dtext 149 60 2100 unidade(s) (Max: <OBJ.amount>)

else
    dtext 14 12 37 Deseja comprar <OBJ.name>?
    dtext 14 32 2100 Vendedor: <uid.<SRC.CTAG.vendor_selectedOwner>.tag.name>
    dtext 14 52 2100 Preco Unitario: <vendor_cashFormat <SRC.CTAG.vendor_selectedPrice>,1>
    dtext 14 72 2100 Comprar
    gumppic 75 72 2443
    dtextentry 80 74 50 17 0 2 <OBJ.amount>
    dtext 149 72 2100 unidade(s) (Max: <OBJ.amount>)
endif


if (<src.town_CheckPrivs <DEF.TOWN_PRIV_CONFISCATE>>) && (<SRC.CTAG0.vendor_op>==2)
    button 14 122 2224 2224 1 0 3
    dtext 38 118 166 Devolver
    button 88 122 2224 2224 1 0 4
    dtext 112 118 166 Confiscar
endif

[DIALOG d_vendor_item_detail button]
ON=0
vendor_openDialogOnPage d_vendor_list

ON=1
// btBack
vendor_openDialogOnPage d_vendor_list

ON=2
// btAccept
OBJ=<SRC.CTAG.vendor_selectedItem>
if (<SRC.CTAG0.vendor_op>==1) || (<SRC.CTAG0.vendor_op>==4)
    //campos devem ser numericos, preco deve ser maior igual a 1 e a quantidade deve estar correta
    if !(<isnum <argtxt[1]>>) || !(<isnum <argtxt[2]>>) || (<argtxt[1]> < 1) || (!<argtxt[2]>) || (<argtxt[2]> > <OBJ.amount>)
        src.sysmessage Campos invalidos. Entre com os dados novamente.
        dialog d_vendor_item_detail
        return 1
    endif

    if ( <ARGCHKID>==2 )            //silver
        LOCAL.price=<argtxt[1]>*10  
    elif ( <ARGCHKID>==3 )          //gold
        LOCAL.price=<argtxt[1]>*100
    else                            //copper
        LOCAL.price=<argtxt[1]>
    endif

    vendor_sellItem <SRC.CTAG.vendor_selectedItem>,<LOCAL.price>,<argtxt[2]>

    vendor_buySellTrigger
else
    //quantidade deve estar correta
    if !(<isnum <argtxt[2]>>) || (<argtxt[2]> < 1) || (<argtxt[2]> > <OBJ.amount>)
        src.sysmessage Campos invalidos. Entre com os dados novamente.
        dialog d_vendor_item_detail
        return 1
    endif

    vendor_buyItem <SRC.CTAG.vendor_selectedItem>,<SRC.CTAG.vendor_selectedPrice>,<argtxt[2]>
    
    vendor_buySellTrigger
endif


ON=3
// btTakeback
vendor_bt_takeback

ON=4
// btRemove
vendor_bt_remove

//*****************************************************************************
//*****************************************************************************
// NPCs E SPEECHes
//*****************************************************************************
//*****************************************************************************

//*****************************************************************************
// c_h_vendor_m
//*****************************************************************************
[CHARDEF c_h_vendor_m]
DEFNAME=C_H_VENDOR
NAME=#NAMES_HUMANMALE
ID=C_MAN
DESIRES=i_gold,e_notoriety
AVERSIONS=t_TRAP

TSPEECH=jobVENDOR

ON=@Create
COLOR=03eb
STR={71 85}
DEX={66 80}
INT={66 80}

tag.raca Humano

SWORDSMANSHIP={15.0 38.0}
ITEMID={50.0 70.0}
TACTICS={15.0 38.0}

NPC=BRAIN_VENDOR
NEED=i_gold

ITEMNEWBIE=i_hair_ponytail
COLOR=0456
ITEMNEWBIE=i_beard_vandyke
COLOR=match_hair

ON=@ContextMenuSelect
if (<argn>==31) //buy
    SRC.CTAG.vendor_op=2
    vendor_buySellTrigger <uid>
elif (<argn>==32) //sell
    SRC.CTAG.vendor_op=1
    vendor_buySellTrigger <uid>
endif

ON=@NPCRestock
ITEM=RANDOM_LIGHT
ITEM=i_shirt_fancy
COLOR=colors_green
ITEM=i_pants_long
COLOR=colors_yellow
ITEM=random_shoes
COLOR=colors_neutral

CATEGORY=MYT - NPCs
SUBSECTION=Vendedor
DESCRIPTION=Vendedor (Humano)

//*****************************************************************************
// c_h_vendor_f
//*****************************************************************************
[CHARDEF c_h_vendor_f]
DEFNAME=C_H_VENDOR_F
NAME=#NAMES_HUMANFEMALE
ID=C_WOMAN
DESIRES=i_gold,e_notoriety
AVERSIONS=t_TRAP

TSPEECH=jobVENDOR

ON=@Create
COLOR=03eb
STR={71 85}
DEX={66 80}
INT={66 80}

tag.raca Humano

SWORDSMANSHIP={15.0 38.0}
ITEMID={50.0 70.0}
TACTICS={15.0 38.0}

NPC=BRAIN_VENDOR
NEED=i_gold

ON=@ContextMenuSelect
if (<argn>==31) //buy
    SRC.CTAG.vendor_op=2
    vendor_buySellTrigger <uid>
elif (<argn>==32) //sell
    SRC.CTAG.vendor_op=1
    vendor_buySellTrigger <uid>
endif

ON=@NPCRestock
ITEM=RANDOM_LIGHT
ITEM=i_shirt_fancy
COLOR=colors_green
ITEM=i_pants_long
COLOR=colors_yellow
ITEM=random_shoes
COLOR=colors_neutral

CATEGORY=MYT - NPCs
SUBSECTION=Vendedor
DESCRIPTION=Vendedor (Humano)


//*****************************************************************************
// c_o_vendor_m
//*****************************************************************************
[CHARDEF c_o_vendor_m]
DEFNAME=c_o_vendor_m
NAME=#NAMES_HUMANMALE
ID=C_MAN
DESIRES=i_gold,e_notoriety
AVERSIONS=t_TRAP


TSPEECH=jobVENDOR

ON=@Create
COLOR=0597
STR={71 85}
DEX={66 80}
INT={66 80}

tag.raca Orc

SWORDSMANSHIP={15.0 38.0}
ITEMID={50.0 70.0}
TACTICS={15.0 38.0}

NPC=BRAIN_VENDOR
NEED=i_gold

ITEMNEWBIE=i_head_orc

ON=@ContextMenuSelect
if (<argn>==31) //buy
    SRC.CTAG.vendor_op=2
    vendor_buySellTrigger <uid>
elif (<argn>==32) //sell
    SRC.CTAG.vendor_op=1
    vendor_buySellTrigger <uid>
endif

ON=@NPCRestock
ITEM=RANDOM_LIGHT
ITEM=i_shirt_fancy
COLOR=colors_green
ITEM=i_pants_long
COLOR=colors_yellow


CATEGORY=MYT - NPCs
SUBSECTION=Vendedor
DESCRIPTION=Vendedor (Orc)

//*****************************************************************************
// c_e_vendor_f
//*****************************************************************************
[CHARDEF c_e_vendor_f]
ID=c_woman
DEFNAME=c_e_vendor_f
NAME=#NAMES_HUMANFEMALE
DESIRES=i_gold,e_notoriety
AVERSIONS=t_TRAP


TSPEECH=jobVENDOR

ON=@Create
COLOR=0412
STR={71 85}
DEX={66 80}
INT={66 80}

tag.raca Elfo

SWORDSMANSHIP={15.0 38.0}
ITEMID={50.0 70.0}
TACTICS={15.0 38.0}

NPC=BRAIN_VENDOR
NEED=i_gold

ON=@ContextMenuSelect
if (<argn>==31) //buy
    SRC.CTAG.vendor_op=2
    vendor_buySellTrigger <uid>
elif (<argn>==32) //sell
    SRC.CTAG.vendor_op=1
    vendor_buySellTrigger <uid>
endif

ON=@NPCRestock
ITEM=i_hair_long
COLOR=035
ITEM=i_shirt_fancy
COLOR=colors_green
ITEM=i_skirt_long
COLOR=colors_yellow


CATEGORY=MYT - NPCs
SUBSECTION=Vendedor
DESCRIPTION=Vendedor (Elfa)

//*****************************************************************************
// c_d_vendor_m
//*****************************************************************************
[CHARDEF c_d_vendor_m]
ID=c_man
DEFNAME=c_d_vendor_m
NAME=#NAMES_HUMANMALE
DESIRES=i_gold,e_notoriety
AVERSIONS=t_TRAP


TSPEECH=jobVENDOR

ON=@Create
COLOR=0412
STR={71 85}
DEX={66 80}
INT={66 80}

tag.raca Anao

SWORDSMANSHIP={15.0 38.0}
ITEMID={50.0 70.0}
TACTICS={15.0 38.0}

NPC=BRAIN_VENDOR
NEED=i_gold

ON=@ContextMenuSelect
if (<argn>==31) //buy
    SRC.CTAG.vendor_op=2
    vendor_buySellTrigger <uid>
elif (<argn>==32) //sell
    SRC.CTAG.vendor_op=1
    vendor_buySellTrigger <uid>
endif

ON=@NPCRestock
ITEM=i_hair_long
COLOR=0
ITEM=i_beard_long
COLOR=0
ITEM=i_shirt_fancy
COLOR=colors_green
ITEM=i_pants_long
COLOR=colors_yellow

ITEM=random_shoes
COLOR=colors_neutral

CATEGORY=MYT - NPCs
SUBSECTION=Vendedor
DESCRIPTION=Vendedor (Anao)

//*****************************************************************************
// jobVENDOR
//*****************************************************************************
[SPEECH jobVENDOR]
ON=*quero*vender*pelo*reino

    SRC.CTAG.vendor_op=4
    vendor_buySellTrigger <uid>
    return 1

ON=*gostaria*vender*
ON=*quero*vender*

    SRC.CTAG.vendor_op=1
    vendor_buySellTrigger <uid>
    return 1

ON=*gostaria*comprar*
ON=*quero*comprar*
ON=*gostaria*ver*
ON=*quero*ver*

    SRC.CTAG.vendor_op=2
    vendor_buySellTrigger <uid>
    return 1

ON=*gostaria*pegar*
ON=*devolver*
ON=*retirar*

    SRC.CTAG.vendor_op=3
    vendor_buySellTrigger <uid>
    return 1
   
ON=limpeza
    if ( <SRC.isGM> )

        //clear database
        vendor_removeVendor <uid>
        
        SRC.sysmessage <name> resetado!!
    endif

return 1

ON=oi
ON=ola
ON=olá
ON=*servico*mim*
ON=*trabalho*mim*

    quest_closeDialogs
    SRC.CTAG.quest_selectedNpc=<uid>
    quest_createNpcQuestList
    if <SRC.CTAG0.quest_numQuests> > 0
            message O que deseja fazer?
            dialog d_quest_list
    else            
        say Gostaria de comprar ou vender algo? Retirar talvez?
    endif

[EOF]
